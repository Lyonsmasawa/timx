[2025-01-14 12:13:47,263] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-14 12:13:47,265] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-14 12:13:47,267] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-14 12:13:47,268] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-14 12:13:47,269] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-14 12:13:47,270] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-14 12:13:47,272] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-14 12:13:47,273] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-14 12:13:47,274] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-14 12:13:47,275] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-14 12:13:47,277] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-14 12:13:47,278] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-14 12:13:47,279] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-17 06:05:23,755] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-17 06:05:23,762] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-17 06:05:23,763] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-17 06:05:23,764] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-17 06:05:23,765] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-17 06:05:23,767] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-17 06:05:23,769] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-17 06:05:23,770] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-17 06:05:23,771] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-17 06:05:23,773] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-17 06:05:23,774] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-17 06:05:23,775] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-17 06:05:23,777] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-17 06:56:59,228] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-17 06:56:59,236] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-17 06:56:59,243] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-17 06:56:59,244] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-17 06:56:59,246] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-17 06:56:59,248] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-17 06:56:59,251] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-17 06:56:59,253] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-17 06:56:59,254] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-17 06:56:59,262] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-17 06:56:59,265] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-17 06:56:59,267] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-17 06:56:59,268] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-17 07:01:50,682] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-17 07:01:50,686] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-17 07:01:50,688] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-17 07:01:50,693] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-17 07:01:50,694] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-17 07:01:50,697] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-17 07:01:50,698] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-17 07:01:50,699] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-17 07:01:50,700] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-17 07:01:50,701] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-17 07:01:50,703] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-17 07:01:50,725] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-17 07:01:50,728] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-19 22:33:01,134] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-19 22:33:01,139] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-19 22:33:01,140] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-19 22:33:01,142] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-19 22:33:01,143] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-19 22:33:01,144] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-19 22:33:01,146] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-19 22:33:01,148] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-19 22:33:01,149] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-19 22:33:01,150] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-19 22:33:01,152] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-19 22:33:01,154] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-19 22:33:01,157] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 03:40:12,436] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 03:40:12,440] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 03:40:12,442] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 03:40:12,443] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 03:40:12,444] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 03:40:12,445] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 03:40:12,446] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 03:40:12,449] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 03:40:12,452] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 03:40:12,454] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 03:40:12,455] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 03:40:12,456] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 03:40:12,457] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 06:52:20,768] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 06:52:20,773] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 06:52:20,775] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 06:52:20,776] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization_id):
    return 1

[2025-01-20 06:52:20,777] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 06:52:20,778] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 06:52:20,780] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 06:52:20,781] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 06:52:20,782] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 06:52:20,783] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 06:52:20,785] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 06:52:20,786] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 06:52:20,788] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 06:52:20,790] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 06:52:20,792] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 07:02:47,732] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 07:02:47,736] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 07:02:47,740] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 07:02:47,742] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization_id):
    return 1

[2025-01-20 07:02:47,744] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 07:02:47,745] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 07:02:47,747] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 07:02:47,749] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 07:02:47,750] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 07:02:47,752] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 07:02:47,757] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 07:02:47,759] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 07:02:47,761] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 07:02:47,762] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 07:02:47,763] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 07:58:31,725] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 07:58:31,728] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 07:58:31,731] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 07:58:31,732] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 07:58:31,734] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 07:58:31,735] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 07:58:31,736] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 07:58:31,737] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 07:58:31,738] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 07:58:31,739] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 07:58:31,740] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 07:58:31,742] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 07:58:31,743] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 07:58:31,744] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 07:58:31,745] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:00:07,189] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:00:07,196] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:00:07,198] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:00:07,200] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:00:07,204] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:00:07,208] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:00:07,216] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:00:07,224] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:00:07,234] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:00:07,235] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:00:07,236] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:00:07,238] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:00:07,242] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:00:07,244] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:00:07,246] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:03:51,526] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:03:51,530] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:03:51,532] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:03:51,532] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:03:51,533] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:03:51,535] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:03:51,537] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:03:51,539] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:03:51,541] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:03:51,543] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:03:51,550] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:03:51,553] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:03:51,555] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:03:51,557] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:03:51,559] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:09:22,373] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:09:22,374] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:09:22,377] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:09:22,379] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:09:22,381] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:09:22,383] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:09:22,384] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:09:22,385] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:09:22,386] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:09:22,387] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:09:22,388] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:09:22,389] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:09:22,390] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:09:22,392] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:09:22,394] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:10:10,470] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:10:10,472] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:10:10,473] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:10:10,474] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:10:10,476] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:10:10,479] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:10:10,481] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:10:10,483] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:10:10,484] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:10:10,485] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:10:10,486] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:10:10,487] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:10:10,489] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:10:10,493] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:10:10,495] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:11:14,377] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:11:14,379] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:11:14,380] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:11:14,381] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:11:14,383] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:11:14,384] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:11:14,385] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:11:14,387] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:11:14,389] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:11:14,390] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:11:14,392] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:11:14,393] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:11:14,394] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:11:14,395] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:11:14,396] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:12:51,987] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:12:51,988] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:12:51,989] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:12:51,990] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:12:51,991] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:12:51,992] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:12:51,993] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:12:51,994] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:12:51,995] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:12:51,997] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:12:52,000] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:12:52,001] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:12:52,002] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:12:52,003] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:12:52,004] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:13:09,602] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:13:09,603] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:13:09,604] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:13:09,605] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:13:09,606] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:13:09,608] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:13:09,609] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:13:09,610] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:13:09,611] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:13:09,612] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:13:09,613] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:13:09,614] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:13:09,615] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:13:09,616] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:13:09,617] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:23:31,870] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:23:31,872] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:23:31,873] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:23:31,874] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:23:31,875] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:23:31,875] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:23:31,877] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:23:31,878] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:23:31,879] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:23:31,880] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:23:31,881] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:23:31,882] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:23:31,883] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:23:31,884] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:23:31,886] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:23:37,661] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:23:37,663] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:23:37,665] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:23:37,668] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:23:37,669] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:23:37,672] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:23:37,674] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:23:37,676] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:23:37,680] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:23:37,686] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:23:37,689] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:23:37,698] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:23:37,700] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:23:37,701] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:23:37,702] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:40:10,682] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:40:10,684] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:40:10,685] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:40:10,686] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:40:10,688] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:40:10,689] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:40:10,690] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:40:10,691] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:40:10,692] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:40:10,694] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:40:10,696] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:40:10,697] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:40:10,699] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:40:10,700] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:40:10,701] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 10:06:03,638] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 10:06:03,642] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 10:06:03,644] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 10:06:03,648] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 10:06:03,649] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 10:06:03,651] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 10:06:03,653] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 10:06:03,654] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 10:06:03,655] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 10:06:03,657] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 10:06:03,667] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 10:06:03,672] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 10:06:03,674] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 10:06:03,680] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 10:06:03,684] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 10:07:28,244] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 10:07:28,246] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 10:07:28,247] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 10:07:28,249] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 10:07:28,250] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 10:07:28,251] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 10:07:28,253] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 10:07:28,258] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 10:07:28,259] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 10:07:28,260] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 10:07:28,261] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 10:07:28,262] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 10:07:28,263] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 10:07:28,264] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 10:07:28,266] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 10:09:20,749] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 10:09:20,751] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 10:09:20,752] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 10:09:20,753] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 10:09:20,754] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 10:09:20,756] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 10:09:20,757] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 10:09:20,758] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 10:09:20,759] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 10:09:20,760] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 10:09:20,761] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 10:09:20,762] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 10:09:20,763] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 10:09:20,768] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 10:09:20,769] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 10:11:20,836] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 10:11:20,838] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 10:11:20,839] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 10:11:20,840] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 10:11:20,842] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 10:11:20,844] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 10:11:20,845] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 10:11:20,846] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 10:11:20,848] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 10:11:20,849] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 10:11:20,850] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 10:11:20,851] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 10:11:20,852] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 10:11:20,853] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 10:11:20,854] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 02:20:36,985] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 02:20:36,991] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 02:20:36,993] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 02:20:36,994] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 02:20:36,995] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 02:20:36,996] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 02:20:36,997] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 02:20:36,999] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 02:20:37,000] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 02:20:37,001] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 02:20:37,002] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 02:20:37,003] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 02:20:37,004] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 02:20:37,009] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 02:20:37,012] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 02:20:46,670] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 02:20:46,671] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 02:20:46,672] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 02:20:46,674] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 02:20:46,675] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 02:20:46,677] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 02:20:46,680] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 02:20:46,689] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 02:20:46,690] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 02:20:46,694] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 02:20:46,699] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 02:20:46,701] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 02:20:46,703] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 02:20:46,705] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 02:20:46,713] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 02:21:01,482] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 02:21:01,499] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 02:21:01,508] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 02:21:01,528] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 02:21:01,546] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 02:21:01,560] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 02:21:01,564] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 02:21:01,572] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 02:21:01,578] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 02:21:01,607] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 02:21:01,619] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 02:21:01,631] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 02:21:01,648] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 02:21:01,654] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 02:21:01,665] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 02:21:16,711] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 02:21:16,713] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 02:21:16,714] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 02:21:16,716] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 02:21:16,721] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 02:21:16,724] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 02:21:16,728] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 02:21:16,732] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 02:21:16,733] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 02:21:16,734] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 02:21:16,736] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 02:21:16,737] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 02:21:16,738] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 02:21:16,742] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 02:21:16,745] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 02:25:21,108] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 02:25:21,111] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 02:25:21,113] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 02:25:21,114] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 02:25:21,118] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 02:25:21,120] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 02:25:21,122] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 02:25:21,124] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 02:25:21,129] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 02:25:21,131] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 02:25:21,133] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 02:25:21,134] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 02:25:21,136] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 02:25:21,138] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 02:25:21,140] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 02:25:27,136] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 02:25:27,137] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 02:25:27,139] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 02:25:27,140] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 02:25:27,141] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 02:25:27,142] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 02:25:27,146] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 02:25:27,149] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 02:25:27,150] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 02:25:27,152] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 02:25:27,153] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 02:25:27,154] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 02:25:27,155] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 02:25:27,156] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 02:25:27,157] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 02:25:31,332] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 02:25:31,335] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 02:25:31,339] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 02:25:31,347] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 02:25:31,350] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 02:25:31,367] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 02:25:31,372] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 02:25:31,375] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 02:25:31,383] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 02:25:31,390] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 02:25:31,397] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 02:25:31,412] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 02:25:31,423] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 02:25:31,433] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 02:25:31,438] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 02:30:15,103] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 02:30:15,105] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 02:30:15,106] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 02:30:15,107] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 02:30:15,108] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 02:30:15,109] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 02:30:15,111] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 02:30:15,113] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 02:30:15,114] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 02:30:15,115] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 02:30:15,117] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 02:30:15,118] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 02:30:15,119] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 02:30:15,120] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 02:30:15,121] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 03:10:02,495] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 03:10:02,499] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 03:10:02,500] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 03:10:02,501] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 03:10:02,502] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 03:10:02,503] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 03:10:02,504] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 03:10:02,504] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 03:10:02,505] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 03:10:02,506] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 03:10:02,507] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 03:10:02,510] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 03:10:02,515] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 03:10:02,517] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 03:10:02,518] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 03:10:36,707] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 03:10:36,712] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 03:10:36,717] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 03:10:36,719] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 03:10:36,720] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 03:10:36,721] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 03:10:36,725] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 03:10:36,730] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 03:10:36,731] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 03:10:36,732] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 03:10:36,734] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 03:10:36,736] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 03:10:36,737] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 03:10:36,738] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 03:10:36,739] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 03:27:13,484] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 03:27:13,490] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 03:27:13,491] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 03:27:13,492] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 03:27:13,493] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 03:27:13,494] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 03:27:13,495] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 03:27:13,496] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 03:27:13,497] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 03:27:13,498] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 03:27:13,504] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 03:27:13,505] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 03:27:13,509] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 03:27:13,510] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 03:27:13,511] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 03:28:27,989] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 03:28:27,993] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 03:28:27,994] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 03:28:27,996] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 03:28:27,997] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 03:28:27,999] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 03:28:28,000] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 03:28:28,001] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 03:28:28,002] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 03:28:28,003] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 03:28:28,004] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 03:28:28,005] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 03:28:28,006] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 03:28:28,007] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 03:28:28,008] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 03:32:09,134] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 03:32:09,137] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 03:32:09,138] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 03:32:09,139] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 03:32:09,140] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 03:32:09,141] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 03:32:09,142] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 03:32:09,143] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 03:32:09,144] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 03:32:09,145] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 03:32:09,147] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 03:32:09,148] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 03:32:09,154] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 03:32:09,156] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 03:32:09,157] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 03:33:15,289] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 03:33:15,291] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 03:33:15,292] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 03:33:15,294] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 03:33:15,296] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 03:33:15,299] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 03:33:15,300] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 03:33:15,301] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 03:33:15,303] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 03:33:15,304] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 03:33:15,305] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 03:33:15,306] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 03:33:15,307] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 03:33:15,308] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 03:33:15,310] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 03:34:22,913] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 03:34:22,916] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 03:34:22,916] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 03:34:22,917] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 03:34:22,918] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 03:34:22,919] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 03:34:22,920] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 03:34:22,921] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 03:34:22,922] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 03:34:22,923] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 03:34:22,924] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 03:34:22,926] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 03:34:22,927] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 03:34:22,929] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 03:34:22,930] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 04:24:34,861] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 04:24:34,864] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 04:24:34,865] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 04:24:34,865] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 04:24:34,866] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 04:24:34,867] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 04:24:34,868] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 04:24:34,869] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 04:24:34,871] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 04:24:34,872] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 04:24:34,873] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 04:24:34,874] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 04:24:34,875] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 04:24:34,876] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 04:24:34,877] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 04:39:17,055] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 04:39:17,074] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 04:39:17,075] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 04:39:17,076] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 04:39:17,077] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 04:39:17,078] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 04:39:17,079] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 04:39:17,080] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 04:39:17,081] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 04:39:17,082] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 04:39:17,083] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 04:39:17,084] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 04:39:17,085] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 04:39:17,087] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 04:39:17,088] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 04:44:10,481] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 04:44:10,484] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 04:44:10,485] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 04:44:10,485] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 04:44:10,487] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 04:44:10,489] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 04:44:10,490] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 04:44:10,491] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 04:44:10,492] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 04:44:10,493] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 04:44:10,498] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 04:44:10,499] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 04:44:10,500] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 04:44:10,501] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 04:44:10,501] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 04:57:31,063] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 04:57:31,065] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 04:57:31,066] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 04:57:31,067] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 04:57:31,068] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 04:57:31,069] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 04:57:31,070] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 04:57:31,071] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 04:57:31,072] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 04:57:31,073] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 04:57:31,073] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 04:57:31,075] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 04:57:31,077] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 04:57:31,078] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 04:57:31,079] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 05:01:55,712] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 05:01:55,719] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 05:01:55,722] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 05:01:55,728] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 05:01:55,736] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 05:01:55,741] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 05:01:55,745] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 05:01:55,747] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 05:01:55,755] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 05:01:55,761] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 05:01:55,764] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 05:01:55,767] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 05:01:55,769] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 05:01:55,771] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 05:01:55,778] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 05:02:02,190] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 05:02:02,192] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 05:02:02,193] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 05:02:02,196] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 05:02:02,198] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 05:02:02,200] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 05:02:02,201] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 05:02:02,202] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 05:02:02,203] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 05:02:02,203] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 05:02:02,204] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 05:02:02,205] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 05:02:02,206] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 05:02:02,207] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 05:02:02,213] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 05:59:20,324] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 05:59:20,327] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 05:59:20,327] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 05:59:20,329] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 05:59:20,330] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 05:59:20,334] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 05:59:20,335] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 05:59:20,336] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 05:59:20,337] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 05:59:20,338] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 05:59:20,340] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 05:59:20,341] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 05:59:20,342] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 05:59:20,343] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 05:59:20,344] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 07:27:29,894] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 07:27:29,898] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 07:27:29,899] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 07:27:29,900] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 07:27:29,901] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 07:27:29,902] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 07:27:29,903] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 07:27:29,903] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 07:27:29,904] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 07:27:29,906] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 07:27:29,907] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 07:27:29,908] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 07:27:29,909] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 07:27:29,910] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 07:27:29,911] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 10:30:38,837] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 10:30:38,853] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 10:30:38,854] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 10:30:38,857] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 10:30:38,862] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 10:30:38,863] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 10:30:38,864] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 10:30:38,865] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 10:30:38,866] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 10:30:38,867] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 10:30:38,868] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 10:30:38,869] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 10:30:38,870] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 10:30:38,874] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 10:30:38,875] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 10:31:46,930] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 10:31:46,948] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 10:31:46,957] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 10:31:46,972] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 10:31:46,988] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 10:31:46,993] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 10:31:47,008] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 10:31:47,018] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 10:31:47,029] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 10:31:47,038] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 10:31:47,055] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 10:31:47,065] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 10:31:47,077] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 10:31:47,088] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 10:31:47,099] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 10:32:45,609] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 10:32:45,637] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 10:32:45,646] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 10:32:45,654] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 10:32:45,658] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 10:32:45,662] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 10:32:45,668] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 10:32:45,677] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 10:32:45,687] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 10:32:45,691] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 10:32:45,694] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 10:32:45,703] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 10:32:45,706] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 10:32:45,711] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 10:32:45,719] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-23 10:33:52,636] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-23 10:33:52,641] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-23 10:33:52,644] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-23 10:33:52,645] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-23 10:33:52,649] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-23 10:33:52,651] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-23 10:33:52,659] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-23 10:33:52,663] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-23 10:33:52,670] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-23 10:33:52,673] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-23 10:33:52,675] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-23 10:33:52,682] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-23 10:33:52,691] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-23 10:33:52,693] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-23 10:33:52,702] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-24 08:27:49,783] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-24 08:27:49,793] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-24 08:27:49,795] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-24 08:27:49,800] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-24 08:27:49,818] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-24 08:27:49,820] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-24 08:27:49,821] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-24 08:27:49,829] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-24 08:27:49,830] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-24 08:27:49,831] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-24 08:27:49,833] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-24 08:27:49,836] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-24 08:27:49,837] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-24 08:27:49,850] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-24 08:27:49,852] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 01:25:29,978] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 01:25:29,983] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 01:25:29,985] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 01:25:29,986] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 01:25:29,987] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 01:25:29,988] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 01:25:29,989] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 01:25:29,990] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 01:25:29,992] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 01:25:29,993] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 01:25:29,994] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 01:25:29,996] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 01:25:29,999] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 01:25:30,001] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 01:25:30,002] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 01:49:56,009] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 01:49:56,018] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 01:49:56,020] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 01:49:56,021] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 01:49:56,023] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 01:49:56,024] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 01:49:56,025] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 01:49:56,027] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 01:49:56,028] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 01:49:56,035] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 01:49:56,038] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 01:49:56,043] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 01:49:56,044] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 01:49:56,053] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 01:49:56,056] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 01:55:42,263] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 01:55:42,265] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 01:55:42,266] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 01:55:42,267] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 01:55:42,267] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 01:55:42,269] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 01:55:42,270] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 01:55:42,271] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 01:55:42,272] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 01:55:42,273] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 01:55:42,274] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 01:55:42,276] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 01:55:42,279] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 01:55:42,280] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 01:55:42,282] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 01:56:33,985] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 01:56:33,987] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 01:56:33,991] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 01:56:33,994] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 01:56:33,996] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 01:56:33,998] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 01:56:34,000] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 01:56:34,003] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 01:56:34,005] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 01:56:34,008] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 01:56:34,011] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 01:56:34,014] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 01:56:34,017] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 01:56:34,018] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 01:56:34,020] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 01:56:47,412] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 01:56:47,413] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 01:56:47,414] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 01:56:47,414] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 01:56:47,415] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 01:56:47,417] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 01:56:47,418] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 01:56:47,419] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 01:56:47,421] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 01:56:47,422] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 01:56:47,425] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 01:56:47,427] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 01:56:47,429] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 01:56:47,430] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 01:56:47,432] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 11:52:37,787] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 11:52:37,792] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 11:52:37,793] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 11:52:37,796] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 11:52:37,799] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 11:52:37,801] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 11:52:37,802] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 11:52:37,804] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 11:52:37,805] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 11:52:37,806] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 11:52:37,809] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 11:52:37,810] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 11:52:37,812] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 11:52:37,813] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 11:52:37,814] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 11:57:13,073] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 11:57:13,074] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 11:57:13,074] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 11:57:13,079] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 11:57:13,080] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 11:57:13,081] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 11:57:13,082] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 11:57:13,083] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 11:57:13,085] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 11:57:13,086] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 11:57:13,088] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 11:57:13,089] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 11:57:13,091] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 11:57:13,092] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 11:57:13,099] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 12:14:37,289] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 12:14:37,292] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 12:14:37,294] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 12:14:37,295] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 12:14:37,296] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 12:14:37,298] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 12:14:37,299] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 12:14:37,301] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 12:14:37,303] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 12:14:37,304] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 12:14:37,306] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 12:14:37,308] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 12:14:37,309] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 12:14:37,310] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 12:14:37,311] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 12:16:21,572] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 12:16:21,574] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 12:16:21,580] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 12:16:21,583] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 12:16:21,586] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 12:16:21,590] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 12:16:21,592] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 12:16:21,594] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 12:16:21,598] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 12:16:21,600] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 12:16:21,603] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 12:16:21,604] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 12:16:21,615] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 12:16:21,619] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 12:16:21,622] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 12:20:11,901] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 12:20:11,903] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 12:20:11,904] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 12:20:11,905] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 12:20:11,907] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 12:20:11,908] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 12:20:11,910] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 12:20:11,911] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 12:20:11,913] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 12:20:11,915] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 12:20:11,918] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 12:20:11,920] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 12:20:11,921] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 12:20:11,922] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 12:20:11,924] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 12:35:00,221] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 12:35:00,223] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 12:35:00,224] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 12:35:00,226] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 12:35:00,228] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 12:35:00,229] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 12:35:00,230] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 12:35:00,231] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 12:35:00,235] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 12:35:00,236] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 12:35:00,238] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 12:35:00,242] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 12:35:00,244] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 12:35:00,245] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 12:35:00,247] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 12:42:08,069] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 12:42:08,070] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 12:42:08,071] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 12:42:08,072] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 12:42:08,073] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 12:42:08,075] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 12:42:08,076] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 12:42:08,078] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 12:42:08,079] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 12:42:08,081] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 12:42:08,082] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 12:42:08,083] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 12:42:08,085] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 12:42:08,085] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 12:42:08,086] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 12:42:32,274] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 12:42:32,275] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 12:42:32,276] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 12:42:32,277] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 12:42:32,278] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 12:42:32,279] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 12:42:32,281] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 12:42:32,282] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 12:42:32,283] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 12:42:32,284] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 12:42:32,286] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 12:42:32,287] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 12:42:32,288] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 12:42:32,290] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 12:42:32,294] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 12:44:08,926] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 12:44:08,927] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 12:44:08,929] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 12:44:08,929] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 12:44:08,930] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 12:44:08,931] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 12:44:08,932] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 12:44:08,934] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 12:44:08,937] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 12:44:08,938] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 12:44:08,939] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 12:44:08,941] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 12:44:08,942] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 12:44:08,943] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 12:44:08,944] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 12:44:25,811] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 12:44:25,812] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 12:44:25,813] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 12:44:25,814] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 12:44:25,815] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 12:44:25,816] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 12:44:25,817] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 12:44:25,818] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 12:44:25,819] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 12:44:25,820] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 12:44:25,821] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 12:44:25,822] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 12:44:25,823] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 12:44:25,824] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 12:44:25,825] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 12:46:04,849] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 12:46:04,850] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 12:46:04,852] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 12:46:04,852] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 12:46:04,854] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 12:46:04,855] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 12:46:04,856] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 12:46:04,858] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 12:46:04,859] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 12:46:04,860] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 12:46:04,863] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 12:46:04,865] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 12:46:04,866] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 12:46:04,868] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 12:46:04,869] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 12:49:27,065] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 12:49:27,070] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 12:49:27,071] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 12:49:27,072] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 12:49:27,075] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 12:49:27,078] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 12:49:27,080] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 12:49:27,083] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 12:49:27,087] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 12:49:27,136] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 12:49:27,145] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 12:49:27,183] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 12:49:27,188] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 12:49:27,196] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 12:49:27,197] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:07:30,392] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:07:30,398] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:07:30,399] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:07:30,400] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:07:30,402] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:07:30,403] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:07:30,405] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:07:30,406] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:07:30,407] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:07:30,409] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:07:30,410] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:07:30,412] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:07:30,413] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:07:30,414] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:07:30,415] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:12:45,133] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:12:45,137] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:12:45,138] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:12:45,140] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:12:45,141] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:12:45,143] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:12:45,144] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:12:45,145] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:12:45,146] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:12:45,147] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:12:45,149] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:12:45,150] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:12:45,152] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:12:45,153] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:12:45,156] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:31:45,312] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:31:45,315] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:31:45,317] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:31:45,318] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:31:45,320] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:31:45,321] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:31:45,322] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:31:45,324] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:31:45,329] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:31:45,331] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:31:45,333] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:31:45,334] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:31:45,336] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:31:45,338] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:31:45,339] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:34:01,921] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:34:01,924] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:34:01,925] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:34:01,926] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:34:01,927] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:34:01,929] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:34:01,930] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:34:01,932] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:34:01,933] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:34:01,939] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:34:01,940] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:34:01,942] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:34:01,943] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:34:01,945] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:34:01,946] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:34:53,272] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:34:53,276] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:34:53,281] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:34:53,286] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:34:53,287] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:34:53,289] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:34:53,290] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:34:53,291] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:34:53,292] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:34:53,294] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:34:53,295] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:34:53,296] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:34:53,298] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:34:53,303] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:34:53,305] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:35:21,384] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:35:21,388] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:35:21,389] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:35:21,389] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:35:21,391] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:35:21,392] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:35:21,393] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:35:21,394] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:35:21,396] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:35:21,400] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:35:21,401] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:35:21,402] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:35:21,404] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:35:21,405] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:35:21,406] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:46:13,657] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:46:13,672] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:46:13,673] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:46:13,674] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:46:13,675] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:46:13,676] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:46:13,683] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:46:13,684] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:46:13,686] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:46:13,687] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:46:13,690] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:46:13,691] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:46:13,692] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:46:13,693] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:46:13,699] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:46:54,151] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:46:54,158] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:46:54,162] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:46:54,164] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:46:54,166] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:46:54,167] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:46:54,168] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:46:54,170] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:46:54,171] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:46:54,173] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:46:54,174] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:46:54,178] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:46:54,180] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:46:54,182] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:46:54,185] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:47:30,895] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:47:30,898] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:47:30,899] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:47:30,900] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:47:30,901] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:47:30,902] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:47:30,904] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:47:30,905] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:47:30,913] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:47:30,915] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:47:30,917] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:47:30,919] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:47:30,920] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:47:30,921] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:47:30,928] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:47:57,299] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:47:57,302] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:47:57,304] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:47:57,306] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:47:57,308] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:47:57,310] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:47:57,311] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:47:57,312] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:47:57,314] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:47:57,315] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:47:57,317] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:47:57,318] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:47:57,319] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:47:57,326] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:47:57,328] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:48:25,962] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:48:25,967] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:48:25,968] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:48:25,974] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:48:25,977] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:48:25,978] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:48:25,984] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:48:25,985] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:48:25,992] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:48:25,993] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:48:25,995] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:48:25,996] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:48:25,998] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:48:25,999] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:48:26,002] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:49:11,594] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:49:11,596] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:49:11,603] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:49:11,605] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:49:11,607] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:49:11,608] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:49:11,610] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:49:11,611] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:49:11,612] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:49:11,613] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:49:11,615] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:49:11,617] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:49:11,622] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:49:11,623] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:49:11,628] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:50:28,273] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:50:28,278] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:50:28,281] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:50:28,283] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:50:28,285] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:50:28,286] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:50:28,288] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:50:28,290] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:50:28,291] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:50:28,293] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:50:28,294] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:50:28,301] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:50:28,303] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:50:28,305] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:50:28,306] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:51:59,111] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:51:59,113] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:51:59,114] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:51:59,115] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:51:59,116] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:51:59,118] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:51:59,119] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:51:59,120] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:51:59,121] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:51:59,122] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:51:59,124] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:51:59,129] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:51:59,131] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:51:59,132] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:51:59,133] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:52:26,975] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:52:26,979] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:52:26,980] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:52:26,981] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:52:26,984] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:52:26,985] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:52:26,988] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:52:26,992] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:52:26,994] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:52:26,996] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:52:26,997] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:52:26,998] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:52:27,000] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:52:27,001] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:52:27,002] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:53:24,994] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:53:24,997] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:53:24,999] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:53:24,999] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:53:25,001] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:53:25,002] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:53:25,006] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:53:25,008] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:53:25,009] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:53:25,010] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:53:25,011] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:53:25,012] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:53:25,014] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:53:25,015] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:53:25,016] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:54:26,992] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:54:26,995] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:54:26,996] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:54:26,997] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:54:27,000] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:54:27,003] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:54:27,005] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:54:27,007] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:54:27,008] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:54:27,009] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:54:27,011] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:54:27,012] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:54:27,014] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:54:27,018] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:54:27,021] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:55:43,626] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:55:43,634] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:55:43,635] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:55:43,637] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:55:43,638] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:55:43,640] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:55:43,641] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:55:43,642] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:55:43,643] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:55:43,644] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:55:43,650] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:55:43,651] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:55:43,652] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:55:43,653] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:55:43,654] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:56:37,259] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:56:37,266] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:56:37,267] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:56:37,268] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:56:37,269] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:56:37,270] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:56:37,271] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:56:37,272] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:56:37,272] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:56:37,274] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:56:37,283] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:56:37,284] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:56:37,286] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:56:37,287] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:56:37,288] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:56:59,219] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:56:59,222] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:56:59,223] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:56:59,223] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:56:59,227] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:56:59,229] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:56:59,231] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:56:59,232] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:56:59,233] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:56:59,235] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:56:59,237] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:56:59,239] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:56:59,240] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:56:59,247] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:56:59,248] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:57:52,301] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:57:52,335] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:57:52,339] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:57:52,346] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:57:52,349] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:57:52,351] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:57:52,353] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:57:52,361] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:57:52,366] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:57:52,369] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:57:52,370] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:57:52,382] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:57:52,386] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:57:52,401] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:57:52,408] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:58:31,533] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:58:31,536] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:58:31,538] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:58:31,539] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:58:31,540] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:58:31,543] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:58:31,544] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:58:31,545] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:58:31,546] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:58:31,547] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:58:31,548] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:58:31,549] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:58:31,550] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:58:31,551] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:58:31,557] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 13:58:55,112] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 13:58:55,115] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 13:58:55,117] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 13:58:55,121] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 13:58:55,122] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 13:58:55,124] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 13:58:55,126] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 13:58:55,127] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 13:58:55,128] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 13:58:55,130] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 13:58:55,131] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 13:58:55,132] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 13:58:55,134] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 13:58:55,138] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 13:58:55,140] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 14:02:32,100] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 14:02:32,103] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 14:02:32,104] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 14:02:32,105] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 14:02:32,110] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 14:02:32,112] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 14:02:32,113] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 14:02:32,114] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 14:02:32,115] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 14:02:32,116] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 14:02:32,117] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 14:02:32,118] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 14:02:32,119] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 14:02:32,120] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 14:02:32,121] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 14:03:57,820] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 14:03:57,824] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 14:03:57,825] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 14:03:57,826] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 14:03:57,828] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 14:03:57,829] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 14:03:57,831] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 14:03:57,833] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 14:03:57,837] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 14:03:57,838] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 14:03:57,841] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 14:03:57,842] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 14:03:57,844] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 14:03:57,845] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 14:03:57,847] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 14:05:44,057] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 14:05:44,058] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 14:05:44,059] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 14:05:44,060] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 14:05:44,060] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 14:05:44,062] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 14:05:44,065] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 14:05:44,066] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 14:05:44,068] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 14:05:44,070] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 14:05:44,071] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 14:05:44,073] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 14:05:44,074] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 14:05:44,075] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 14:05:44,076] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 14:06:03,178] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 14:06:03,179] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 14:06:03,181] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 14:06:03,182] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 14:06:03,183] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 14:06:03,184] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 14:06:03,185] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 14:06:03,187] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 14:06:03,188] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 14:06:03,189] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 14:06:03,191] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 14:06:03,192] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 14:06:03,193] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 14:06:03,196] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 14:06:03,198] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 14:10:13,903] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 14:10:13,907] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 14:10:13,908] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 14:10:13,909] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 14:10:13,910] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 14:10:13,911] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 14:10:13,912] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 14:10:13,918] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 14:10:13,919] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 14:10:13,920] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 14:10:13,921] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 14:10:13,923] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 14:10:13,925] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 14:10:13,926] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 14:10:13,927] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 14:30:33,497] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 14:30:33,501] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 14:30:33,502] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 14:30:33,504] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 14:30:33,505] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 14:30:33,507] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 14:30:33,508] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 14:30:33,509] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 14:30:33,511] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 14:30:33,538] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 14:30:33,541] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 14:30:33,543] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 14:30:33,550] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 14:30:33,552] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 14:30:33,553] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 15:06:37,448] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 15:06:37,451] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 15:06:37,452] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 15:06:37,453] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 15:06:37,455] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 15:06:37,459] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 15:06:37,461] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 15:06:37,465] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 15:06:37,466] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 15:06:37,468] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 15:06:37,470] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 15:06:37,471] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 15:06:37,472] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 15:06:37,478] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 15:06:37,480] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 15:54:07,659] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 15:54:07,662] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 15:54:07,663] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 15:54:07,665] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 15:54:07,666] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 15:54:07,668] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 15:54:07,670] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 15:54:07,671] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 15:54:07,672] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 15:54:07,673] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 15:54:07,674] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 15:54:07,675] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 15:54:07,676] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 15:54:07,677] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 15:54:07,677] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 16:00:14,236] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 16:00:14,240] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 16:00:14,241] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 16:00:14,242] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 16:00:14,244] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 16:00:14,246] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 16:00:14,249] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 16:00:14,250] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 16:00:14,251] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 16:00:14,253] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 16:00:14,255] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 16:00:14,257] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 16:00:14,258] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 16:00:14,263] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 16:00:14,266] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 16:12:13,766] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 16:12:13,771] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 16:12:13,774] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 16:12:13,775] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 16:12:13,777] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 16:12:13,778] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 16:12:13,780] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 16:12:13,781] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 16:12:13,782] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 16:12:13,784] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 16:12:13,785] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 16:12:13,787] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 16:12:13,789] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 16:12:13,790] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 16:12:13,792] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 16:22:06,183] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 16:22:06,186] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 16:22:06,190] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 16:22:06,192] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 16:22:06,193] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 16:22:06,194] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 16:22:06,195] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 16:22:06,196] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 16:22:06,197] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 16:22:06,198] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 16:22:06,200] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 16:22:06,200] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 16:22:06,202] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 16:22:06,206] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 16:22:06,207] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 16:30:28,853] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 16:30:28,857] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 16:30:28,858] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 16:30:28,860] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 16:30:28,861] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 16:30:28,863] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 16:30:28,865] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 16:30:28,866] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 16:30:28,868] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 16:30:28,870] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 16:30:28,872] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 16:30:28,873] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 16:30:28,876] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 16:30:28,880] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 16:30:28,882] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 16:31:09,037] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 16:31:09,042] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 16:31:09,044] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 16:31:09,045] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 16:31:09,047] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 16:31:09,048] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 16:31:09,050] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 16:31:09,051] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 16:31:09,053] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 16:31:09,054] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 16:31:09,059] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 16:31:09,061] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 16:31:09,063] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 16:31:09,064] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 16:31:09,066] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 16:32:43,813] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 16:32:43,815] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 16:32:43,817] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 16:32:43,818] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 16:32:43,821] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 16:32:43,822] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 16:32:43,824] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 16:32:43,825] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 16:32:43,826] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 16:32:43,827] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 16:32:43,829] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 16:32:43,830] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 16:32:43,832] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 16:32:43,840] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 16:32:43,842] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 16:33:02,787] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 16:33:02,789] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 16:33:02,791] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 16:33:02,792] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 16:33:02,793] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 16:33:02,794] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 16:33:02,795] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 16:33:02,796] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 16:33:02,797] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 16:33:02,806] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 16:33:02,810] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 16:33:02,813] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 16:33:02,822] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 16:33:02,825] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 16:33:02,826] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 16:36:40,665] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 16:36:40,668] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 16:36:40,669] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 16:36:40,670] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 16:36:40,672] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 16:36:40,673] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 16:36:40,675] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 16:36:40,676] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 16:36:40,677] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 16:36:40,679] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 16:36:40,680] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 16:36:40,681] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 16:36:40,682] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 16:36:40,683] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 16:36:40,684] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 16:44:30,009] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 16:44:30,014] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 16:44:30,015] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 16:44:30,016] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 16:44:30,019] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 16:44:30,020] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 16:44:30,022] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 16:44:30,023] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 16:44:30,024] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 16:44:30,025] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 16:44:30,030] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 16:44:30,032] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 16:44:30,033] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 16:44:30,035] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 16:44:30,037] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 16:49:24,332] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 16:49:24,335] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 16:49:24,336] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 16:49:24,338] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 16:49:24,340] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 16:49:24,341] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 16:49:24,343] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 16:49:24,348] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 16:49:24,349] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 16:49:24,351] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 16:49:24,352] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 16:49:24,353] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 16:49:24,355] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 16:49:24,356] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 16:49:24,357] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 17:03:58,740] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 17:03:58,743] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 17:03:58,745] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 17:03:58,746] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 17:03:58,748] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 17:03:58,750] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 17:03:58,751] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 17:03:58,752] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 17:03:58,754] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 17:03:58,755] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 17:03:58,757] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 17:03:58,758] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 17:03:58,760] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 17:03:58,761] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 17:03:58,766] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 17:07:59,297] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 17:07:59,301] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 17:07:59,301] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 17:07:59,302] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 17:07:59,303] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 17:07:59,304] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 17:07:59,306] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 17:07:59,307] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 17:07:59,308] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 17:07:59,310] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 17:07:59,311] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 17:07:59,313] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 17:07:59,314] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 17:07:59,320] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 17:07:59,322] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 17:12:06,800] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 17:12:06,806] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 17:12:06,807] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 17:12:06,809] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 17:12:06,810] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 17:12:06,812] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 17:12:06,814] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 17:12:06,815] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 17:12:06,817] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 17:12:06,824] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 17:12:06,826] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 17:12:06,827] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 17:12:06,828] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 17:12:06,830] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 17:12:06,831] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 17:13:08,715] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 17:13:08,724] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 17:13:08,725] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 17:13:08,726] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 17:13:08,727] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 17:13:08,738] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 17:13:08,739] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 17:13:08,740] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 17:13:08,741] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 17:13:08,743] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 17:13:08,744] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 17:13:08,745] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 17:13:08,746] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 17:13:08,747] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 17:13:08,749] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 17:14:44,765] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 17:14:44,768] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 17:14:44,769] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 17:14:44,770] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 17:14:44,771] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 17:14:44,772] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 17:14:44,773] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 17:14:44,774] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 17:14:44,779] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 17:14:44,781] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 17:14:44,782] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 17:14:44,783] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 17:14:44,785] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 17:14:44,786] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 17:14:44,787] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 17:16:58,955] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 17:16:58,958] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 17:16:58,959] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 17:16:58,960] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 17:16:58,961] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 17:16:58,962] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 17:16:58,963] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 17:16:58,964] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 17:16:58,965] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 17:16:58,966] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 17:16:58,972] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 17:16:58,973] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 17:16:58,974] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 17:16:58,975] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 17:16:58,976] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 17:22:51,296] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 17:22:51,301] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 17:22:51,302] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 17:22:51,304] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 17:22:51,305] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 17:22:51,306] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 17:22:51,307] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 17:22:51,309] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 17:22:51,310] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 17:22:51,311] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 17:22:51,312] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 17:22:51,313] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 17:22:51,321] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 17:22:51,324] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 17:22:51,326] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 17:26:39,850] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 17:26:39,854] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 17:26:39,855] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 17:26:39,857] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 17:26:39,859] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 17:26:39,861] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 17:26:39,862] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 17:26:39,864] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 17:26:39,865] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 17:26:39,866] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 17:26:39,872] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 17:26:39,874] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 17:26:39,876] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 17:26:39,877] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 17:26:39,879] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 17:29:41,531] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 17:29:41,535] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 17:29:41,536] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 17:29:41,537] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 17:29:41,540] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 17:29:41,546] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 17:29:41,549] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 17:29:41,551] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 17:29:41,552] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 17:29:41,554] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 17:29:41,555] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 17:29:41,556] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 17:29:41,558] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 17:29:41,567] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 17:29:41,568] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-25 17:32:20,838] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-25 17:32:20,841] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-25 17:32:20,843] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-25 17:32:20,845] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-25 17:32:20,847] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-25 17:32:20,848] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-25 17:32:20,854] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-25 17:32:20,856] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-25 17:32:20,857] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-25 17:32:20,860] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-25 17:32:20,861] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-25 17:32:20,862] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-25 17:32:20,864] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-25 17:32:20,865] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-25 17:32:20,871] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 22:24:28,274] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 22:24:28,276] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 22:24:28,277] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 22:24:28,291] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 22:24:28,299] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 22:24:28,307] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 22:24:28,318] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 22:24:28,319] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 22:24:28,324] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 22:24:28,332] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 22:24:28,343] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 22:24:28,349] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 22:24:28,350] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 22:24:28,353] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 22:24:28,355] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:01:56,758] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:01:56,760] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:01:56,760] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:01:56,761] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:01:56,762] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:01:56,763] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:01:56,764] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:01:56,765] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:01:56,768] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:01:56,769] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:01:56,771] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:01:56,772] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:01:56,774] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:01:56,774] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:01:56,775] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:02:29,089] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:02:29,090] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:02:29,091] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:02:29,092] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:02:29,093] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:02:29,093] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:02:29,094] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:02:29,095] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:02:29,096] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:02:29,097] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:02:29,097] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:02:29,098] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:02:29,099] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:02:29,100] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:02:29,102] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:02:47,074] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:02:47,075] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:02:47,076] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:02:47,077] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:02:47,077] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:02:47,079] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:02:47,083] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:02:47,086] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:02:47,088] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:02:47,089] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:02:47,090] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:02:47,091] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:02:47,091] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:02:47,092] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:02:47,093] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:03:09,573] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:03:09,574] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:03:09,575] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:03:09,576] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:03:09,577] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:03:09,586] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:03:09,587] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:03:09,590] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:03:09,592] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:03:09,595] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:03:09,597] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:03:09,599] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:03:09,600] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:03:09,603] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:03:09,604] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:03:29,153] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:03:29,154] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:03:29,156] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:03:29,157] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:03:29,158] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:03:29,161] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:03:29,161] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:03:29,166] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:03:29,170] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:03:29,173] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:03:29,174] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:03:29,177] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:03:29,179] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:03:29,181] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:03:29,185] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:03:49,467] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:03:49,468] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:03:49,469] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:03:49,470] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:03:49,474] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:03:49,477] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:03:49,478] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:03:49,480] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:03:49,481] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:03:49,482] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:03:49,483] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:03:49,484] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:03:49,495] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:03:49,515] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:03:49,516] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:04:11,960] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:04:11,961] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:04:11,962] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:04:11,964] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:04:11,965] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:04:11,966] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:04:11,967] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:04:11,968] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:04:11,969] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:04:11,970] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:04:11,971] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:04:11,980] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:04:11,980] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:04:11,981] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:04:11,982] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:04:30,447] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:04:30,452] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:04:30,455] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:04:30,472] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:04:30,475] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:04:30,481] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:04:30,484] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:04:30,488] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:04:30,491] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:04:30,492] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:04:30,494] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:04:30,496] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:04:30,499] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:04:30,501] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:04:30,504] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:04:46,803] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:04:46,804] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:04:46,805] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:04:46,806] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:04:46,809] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:04:46,811] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:04:46,813] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:04:46,815] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:04:46,818] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:04:46,819] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:04:46,820] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:04:46,823] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:04:46,827] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:04:46,828] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:04:46,830] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:05:01,389] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:05:01,390] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:05:01,393] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:05:01,394] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:05:01,396] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:05:01,398] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:05:01,400] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:05:01,401] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:05:01,402] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:05:01,403] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:05:01,404] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:05:01,405] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:05:01,407] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:05:01,408] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:05:01,410] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:05:43,788] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:05:43,789] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:05:43,790] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:05:43,791] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:05:43,792] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:05:43,792] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:05:43,793] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:05:43,794] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:05:43,795] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:05:43,804] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:05:43,805] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:05:43,812] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:05:43,813] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:05:43,814] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:05:43,820] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:07:04,122] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:07:04,123] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:07:04,124] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:07:04,125] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:07:04,126] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:07:04,127] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:07:04,127] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:07:04,128] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:07:04,129] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:07:04,130] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:07:04,131] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:07:04,132] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:07:04,133] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:07:04,134] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:07:04,135] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:22:51,988] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:22:51,989] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:22:51,990] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:22:51,991] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:22:51,993] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:22:51,994] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:22:51,995] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:22:51,996] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:22:51,997] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:22:51,998] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:22:51,999] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:22:52,002] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:22:52,003] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:22:52,004] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:22:52,005] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:23:26,641] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:23:26,642] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:23:26,643] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:23:26,644] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:23:26,645] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:23:26,646] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:23:26,648] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:23:26,650] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:23:26,654] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:23:26,655] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:23:26,656] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:23:26,657] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:23:26,659] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:23:26,660] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:23:26,662] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:23:44,989] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:23:44,990] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:23:44,991] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:23:44,992] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:23:44,993] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:23:45,000] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:23:45,002] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:23:45,003] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:23:45,005] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:23:45,009] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:23:45,013] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:23:45,020] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:23:45,021] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:23:45,021] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:23:45,022] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:24:06,588] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:24:06,590] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:24:06,591] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:24:06,592] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:24:06,593] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:24:06,593] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:24:06,594] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:24:06,596] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:24:06,600] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:24:06,604] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:24:06,607] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:24:06,608] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:24:06,609] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:24:06,610] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:24:06,611] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:24:28,730] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:24:28,732] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:24:28,737] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:24:28,738] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:24:28,748] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:24:28,749] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:24:28,751] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:24:28,753] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:24:28,755] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:24:28,757] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:24:28,765] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:24:28,766] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:24:28,767] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:24:28,768] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:24:28,773] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:24:50,944] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:24:50,948] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:24:50,954] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:24:50,958] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:24:50,970] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:24:50,971] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:24:50,972] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:24:50,975] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:24:50,980] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:24:50,982] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:24:50,987] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:24:50,992] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:24:50,996] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:24:50,998] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:24:50,999] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:25:19,331] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:25:19,332] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:25:19,336] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:25:19,338] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:25:19,339] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:25:19,341] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:25:19,342] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:25:19,343] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:25:19,344] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:25:19,344] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:25:19,347] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:25:19,348] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:25:19,349] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:25:19,350] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:25:19,357] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:25:34,047] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:25:34,048] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:25:34,049] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:25:34,051] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:25:34,052] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:25:34,053] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:25:34,055] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:25:34,056] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:25:34,063] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:25:34,064] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:25:34,065] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:25:34,067] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:25:34,068] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:25:34,069] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:25:34,072] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:25:50,790] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:25:50,791] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:25:50,793] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:25:50,795] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:25:50,796] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:25:50,797] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:25:50,798] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:25:50,800] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:25:50,803] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:25:50,804] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:25:50,806] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:25:50,808] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:25:50,813] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:25:50,814] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:25:50,819] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:26:22,375] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:26:22,377] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:26:22,378] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:26:22,379] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:26:22,381] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:26:22,382] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:26:22,384] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:26:22,386] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:26:22,387] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:26:22,388] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:26:22,389] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:26:22,390] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:26:22,395] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:26:22,398] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:26:22,401] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:26:54,661] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:26:54,663] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:26:54,665] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:26:54,666] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:26:54,667] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:26:54,668] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:26:54,673] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:26:54,675] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:26:54,677] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:26:54,682] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:26:54,700] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:26:54,703] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:26:54,709] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:26:54,711] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:26:54,715] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:27:19,062] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:27:19,064] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:27:19,073] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:27:19,093] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:27:19,096] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:27:19,098] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:27:19,105] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:27:19,107] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:27:19,109] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:27:19,111] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:27:19,113] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:27:19,114] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:27:19,116] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:27:19,117] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:27:19,118] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:27:56,978] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:27:56,982] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:27:56,991] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:27:56,993] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:27:56,999] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:27:57,011] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:27:57,016] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:27:57,025] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:27:57,035] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:27:57,043] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:27:57,053] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:27:57,058] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:27:57,061] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:27:57,066] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:27:57,068] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:28:31,063] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:28:31,065] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:28:31,067] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:28:31,069] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:28:31,070] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:28:31,081] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:28:31,085] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:28:31,088] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:28:31,090] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:28:31,093] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:28:31,095] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:28:31,102] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:28:31,103] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:28:31,104] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:28:31,105] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:29:01,802] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:29:01,804] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:29:01,806] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:29:01,818] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:29:01,825] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:29:01,832] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:29:01,850] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:29:01,854] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:29:01,870] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:29:01,878] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:29:01,894] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:29:01,915] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:29:01,918] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:29:01,921] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:29:01,924] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:29:28,507] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:29:28,508] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:29:28,509] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:29:28,516] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:29:28,517] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:29:28,525] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:29:28,526] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:29:28,527] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:29:28,533] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:29:28,536] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:29:28,542] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:29:28,550] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:29:28,554] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:29:28,557] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:29:28,558] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:29:49,220] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:29:49,222] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:29:49,223] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:29:49,227] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:29:49,231] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:29:49,236] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:29:49,241] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:29:49,244] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:29:49,246] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:29:49,250] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:29:49,255] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:29:49,257] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:29:49,261] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:29:49,267] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:29:49,272] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:30:08,680] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:30:08,681] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:30:08,682] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:30:08,683] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:30:08,684] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:30:08,685] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:30:08,695] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:30:08,696] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:30:08,697] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:30:08,698] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:30:08,700] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:30:08,701] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:30:08,705] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:30:08,706] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:30:08,717] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:30:32,594] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:30:32,597] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:30:32,598] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:30:32,600] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:30:32,601] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:30:32,602] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:30:32,604] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:30:32,606] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:30:32,607] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:30:32,614] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:30:32,615] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:30:32,616] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:30:32,618] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:30:32,619] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:30:32,621] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:31:03,529] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:31:03,530] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:31:03,534] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:31:03,557] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:31:03,569] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:31:03,573] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:31:03,575] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:31:03,582] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:31:03,583] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:31:03,585] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:31:03,586] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:31:03,587] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:31:03,587] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:31:03,592] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:31:03,597] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:31:22,883] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:31:22,884] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:31:22,885] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:31:22,886] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:31:22,887] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:31:22,889] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:31:22,891] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:31:22,893] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:31:22,894] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:31:22,896] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:31:22,904] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:31:22,920] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:31:22,921] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:31:22,922] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:31:22,925] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:32:02,813] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:32:02,818] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:32:02,819] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:32:02,821] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:32:02,822] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:32:02,824] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:32:02,825] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:32:02,827] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:32:02,828] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:32:02,839] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:32:02,846] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:32:02,850] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:32:02,853] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:32:02,860] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:32:02,862] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:32:20,216] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:32:20,217] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:32:20,218] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:32:20,219] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:32:20,221] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:32:20,223] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:32:20,224] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:32:20,225] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:32:20,227] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:32:20,228] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:32:20,229] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:32:20,231] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:32:20,232] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:32:20,233] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:32:20,258] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:32:33,612] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:32:33,613] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:32:33,616] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:32:33,624] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:32:33,628] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:32:33,631] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:32:33,638] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:32:33,640] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:32:33,648] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:32:33,649] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:32:33,651] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:32:33,658] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:32:33,671] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:32:33,674] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:32:33,677] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:32:47,843] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:32:47,847] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:32:47,848] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:32:47,849] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:32:47,851] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:32:47,852] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:32:47,863] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:32:47,864] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:32:47,868] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:32:47,876] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:32:47,878] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:32:47,879] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:32:47,880] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:32:47,881] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:32:47,884] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:33:01,710] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:33:01,711] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:33:01,712] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:33:01,713] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:33:01,714] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:33:01,715] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:33:01,716] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:33:01,717] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:33:01,718] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:33:01,719] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:33:01,720] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:33:01,721] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:33:01,722] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:33:01,722] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:33:01,726] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:33:13,431] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:33:13,432] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:33:13,433] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:33:13,437] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:33:13,439] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:33:13,441] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:33:13,445] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:33:13,448] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:33:13,453] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:33:13,454] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:33:13,456] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:33:13,457] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:33:13,458] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:33:13,459] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:33:13,460] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:33:24,547] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:33:24,548] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:33:24,549] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:33:24,552] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:33:24,557] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:33:24,559] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:33:24,565] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:33:24,566] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:33:24,577] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:33:24,579] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:33:24,583] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:33:24,586] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:33:24,588] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:33:24,589] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:33:24,591] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:33:36,272] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:33:36,273] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:33:36,274] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:33:36,276] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:33:36,281] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:33:36,287] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:33:36,290] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:33:36,298] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:33:36,300] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:33:36,302] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:33:36,304] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:33:36,312] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:33:36,318] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:33:36,320] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:33:36,323] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:33:48,228] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:33:48,229] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:33:48,230] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:33:48,237] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:33:48,238] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:33:48,240] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:33:48,242] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:33:48,255] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:33:48,256] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:33:48,273] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:33:48,276] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:33:48,280] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:33:48,287] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:33:48,294] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:33:48,295] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:34:00,073] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:34:00,075] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:34:00,076] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:34:00,077] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:34:00,080] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:34:00,090] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:34:00,096] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:34:00,101] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:34:00,109] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:34:00,111] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:34:00,120] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:34:00,121] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:34:00,123] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:34:00,125] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:34:00,127] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:34:13,316] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:34:13,317] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:34:13,318] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:34:13,319] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:34:13,322] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:34:13,323] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:34:13,325] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:34:13,327] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:34:13,333] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:34:13,337] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:34:13,338] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:34:13,339] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:34:13,342] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:34:13,347] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:34:13,348] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:34:24,906] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:34:24,907] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:34:24,908] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:34:24,909] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:34:24,910] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:34:24,914] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:34:24,916] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:34:24,918] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:34:24,930] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:34:24,931] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:34:24,933] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:34:24,934] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:34:24,936] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:34:24,939] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:34:24,945] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:34:36,592] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:34:36,593] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:34:36,597] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:34:36,598] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:34:36,599] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:34:36,602] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:34:36,609] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:34:36,618] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:34:36,620] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:34:36,623] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:34:36,629] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:34:36,632] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:34:36,633] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:34:36,636] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:34:36,639] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:41:09,695] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:41:09,696] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:41:09,697] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:41:09,700] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:41:09,710] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:41:09,711] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:41:09,713] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:41:09,714] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:41:09,715] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:41:09,716] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:41:09,717] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:41:09,718] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:41:09,719] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:41:09,720] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:41:09,721] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:45:34,595] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-26 23:45:34,609] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-26 23:45:34,610] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-26 23:45:34,612] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-26 23:45:34,613] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-26 23:45:34,614] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-26 23:45:34,616] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-26 23:45:34,620] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-26 23:45:34,621] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-26 23:45:34,622] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-26 23:45:34,624] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-26 23:45:34,624] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-26 23:45:34,625] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-26 23:45:34,627] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-26 23:45:34,628] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-26 23:45:37,095] INFO [vscu_api] 📥 Response Status Code: 200
[2025-01-26 23:45:37,109] INFO [vscu_api] 📥 Response Content: {
  "resultCd": "000",
  "resultMsg": "Successful",
  "resultDt": "20250126234537",
  "data": null
}
[2025-01-27 11:28:35,866] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 11:28:35,871] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 11:28:35,872] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 11:28:35,873] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 11:28:35,874] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 11:28:35,876] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 11:28:35,883] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 11:28:35,885] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 11:28:35,886] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 11:28:35,887] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 11:28:35,889] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 11:28:35,890] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 11:28:35,891] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 11:28:35,892] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 11:28:35,894] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 11:30:03,697] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 11:30:03,700] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 11:30:03,701] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 11:30:03,702] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 11:30:03,704] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 11:30:03,706] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 11:30:03,708] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 11:30:03,709] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 11:30:03,713] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 11:30:03,714] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 11:30:03,716] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 11:30:03,717] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 11:30:03,718] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 11:30:03,719] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 11:30:03,720] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 11:31:11,637] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 11:31:11,640] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 11:31:11,641] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 11:31:11,642] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 11:31:11,644] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 11:31:11,646] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 11:31:11,648] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 11:31:11,650] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 11:31:11,653] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 11:31:11,655] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 11:31:11,656] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 11:31:11,657] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 11:31:11,658] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 11:31:11,663] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 11:31:11,664] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 11:48:02,867] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 11:48:02,871] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 11:48:02,872] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 11:48:02,874] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 11:48:02,876] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 11:48:02,877] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 11:48:02,883] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 11:48:02,886] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 11:48:02,887] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 11:48:02,889] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 11:48:02,890] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 11:48:02,892] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 11:48:02,893] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 11:48:02,894] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 11:48:02,895] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 11:51:55,312] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 11:51:55,316] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 11:51:55,321] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 11:51:55,322] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 11:51:55,324] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 11:51:55,325] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 11:51:55,329] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 11:51:55,330] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 11:51:55,331] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 11:51:55,335] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 11:51:55,339] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 11:51:55,343] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 11:51:55,345] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 11:51:55,347] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 11:51:55,348] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 12:03:59,871] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 12:03:59,874] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 12:03:59,876] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 12:03:59,877] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 12:03:59,878] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 12:03:59,880] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 12:03:59,882] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 12:03:59,883] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 12:03:59,885] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 12:03:59,886] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 12:03:59,888] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 12:03:59,889] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 12:03:59,890] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 12:03:59,891] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 12:03:59,893] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 12:04:31,778] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 12:04:31,781] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 12:04:31,782] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 12:04:31,783] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 12:04:31,785] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 12:04:31,786] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 12:04:31,788] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 12:04:31,790] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 12:04:31,793] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 12:04:31,795] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 12:04:31,797] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 12:04:31,798] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 12:04:31,800] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 12:04:31,802] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 12:04:31,803] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 12:05:27,869] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 12:05:27,891] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 12:05:27,894] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 12:05:27,898] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 12:05:27,902] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 12:05:27,918] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 12:05:27,920] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 12:05:27,923] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 12:05:27,925] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 12:05:27,926] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 12:05:27,927] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 12:05:27,928] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 12:05:27,930] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 12:05:27,930] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 12:05:27,931] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 12:08:40,838] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 12:08:40,841] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 12:08:40,842] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 12:08:40,843] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 12:08:40,846] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 12:08:40,847] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 12:08:40,851] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 12:08:40,853] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 12:08:40,854] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 12:08:40,856] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 12:08:40,857] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 12:08:40,858] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 12:08:40,862] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 12:08:40,864] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 12:08:40,867] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 12:12:29,790] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 12:12:29,793] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 12:12:29,795] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 12:12:29,796] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 12:12:29,798] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 12:12:29,799] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 12:12:29,801] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 12:12:29,803] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 12:12:29,804] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 12:12:29,805] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 12:12:29,807] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 12:12:29,808] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 12:12:29,809] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 12:12:29,810] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 12:12:29,811] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 12:14:25,437] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 12:14:25,442] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 12:14:25,443] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 12:14:25,444] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 12:14:25,445] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 12:14:25,447] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 12:14:25,448] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 12:14:25,450] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 12:14:25,452] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 12:14:25,453] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 12:14:25,454] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 12:14:25,456] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 12:14:25,458] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 12:14:25,461] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 12:14:25,462] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 12:15:02,597] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 12:15:02,600] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 12:15:02,601] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 12:15:02,602] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 12:15:02,604] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 12:15:02,609] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 12:15:02,611] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 12:15:02,612] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 12:15:02,613] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 12:15:02,615] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 12:15:02,616] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 12:15:02,618] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 12:15:02,619] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 12:15:02,620] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 12:15:02,620] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 12:20:32,328] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 12:20:32,331] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 12:20:32,333] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 12:20:32,335] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 12:20:32,339] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 12:20:32,341] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 12:20:32,342] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 12:20:32,344] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 12:20:32,345] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 12:20:32,347] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 12:20:32,348] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 12:20:32,349] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 12:20:32,350] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 12:20:32,351] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 12:20:32,355] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 12:24:33,346] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 12:24:33,349] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 12:24:33,351] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 12:24:33,351] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 12:24:33,352] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 12:24:33,355] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 12:24:33,361] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 12:24:33,363] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 12:24:33,364] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 12:24:33,365] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 12:24:33,366] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 12:24:33,367] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 12:24:33,369] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 12:24:33,371] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 12:24:33,371] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 12:26:18,427] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 12:26:18,429] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 12:26:18,430] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 12:26:18,431] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 12:26:18,432] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 12:26:18,437] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 12:26:18,439] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 12:26:18,440] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 12:26:18,442] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 12:26:18,443] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 12:26:18,444] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 12:26:18,445] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 12:26:18,446] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 12:26:18,447] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 12:26:18,448] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-27 12:26:59,242] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-27 12:26:59,245] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-27 12:26:59,246] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-27 12:26:59,247] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-27 12:26:59,252] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-27 12:26:59,254] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-27 12:26:59,256] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-27 12:26:59,257] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-27 12:26:59,258] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-27 12:26:59,259] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-27 12:26:59,261] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-27 12:26:59,262] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-27 12:26:59,263] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-27 12:26:59,264] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-27 12:26:59,268] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-29 13:32:18,696] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-29 13:32:18,698] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-29 13:32:18,699] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-29 13:32:18,700] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-29 13:32:18,701] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-29 13:32:18,704] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-29 13:32:18,705] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-29 13:32:18,706] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-29 13:32:18,707] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-29 13:32:18,708] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-29 13:32:18,709] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-29 13:32:18,710] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-29 13:32:18,711] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-29 13:32:18,712] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-29 13:32:18,713] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-29 13:37:30,244] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-29 13:37:30,247] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-29 13:37:30,261] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-29 13:37:30,264] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-29 13:37:30,267] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-29 13:37:30,269] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-29 13:37:30,271] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-29 13:37:30,288] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-29 13:37:30,309] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-29 13:37:30,310] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-29 13:37:30,311] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-29 13:37:30,312] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-29 13:37:30,317] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-29 13:37:30,318] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-29 13:37:30,319] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-29 13:55:50,382] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-29 13:55:50,383] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-29 13:55:50,384] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-29 13:55:50,395] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-29 13:55:50,408] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-29 13:55:50,410] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-29 13:55:50,414] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-29 13:55:50,417] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-29 13:55:50,419] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-29 13:55:50,420] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-29 13:55:50,430] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-29 13:55:50,434] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-29 13:55:50,439] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-29 13:55:50,440] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-29 13:55:50,441] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-29 14:36:47,488] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-29 14:36:47,502] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-29 14:36:47,504] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-29 14:36:47,507] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-29 14:36:47,509] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-29 14:36:47,517] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-29 14:36:47,520] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-29 14:36:47,523] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-29 14:36:47,525] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-29 14:36:47,528] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-29 14:36:47,531] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-29 14:36:47,534] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-29 14:36:47,536] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-29 14:36:47,538] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-29 14:36:47,539] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-29 14:41:34,573] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-29 14:41:34,575] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-29 14:41:34,576] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-29 14:41:34,577] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-29 14:41:34,578] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-29 14:41:34,582] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-29 14:41:34,598] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-29 14:41:34,614] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-29 14:41:34,632] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-29 14:41:34,633] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-29 14:41:34,634] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-29 14:41:34,643] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-29 14:41:34,644] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-29 14:41:34,645] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-29 14:41:34,646] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-29 10:18:55,900] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-29 10:18:55,905] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-29 10:18:55,907] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-29 10:18:55,908] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-29 10:18:55,910] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-29 10:18:55,913] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-29 10:18:55,914] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-29 10:18:55,916] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-29 10:18:55,917] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-29 10:18:55,918] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-29 10:18:55,919] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-29 10:18:55,920] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-29 10:18:55,922] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-29 10:18:55,923] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-29 10:18:55,924] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-29 12:35:35,454] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-29 12:35:35,464] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-29 12:35:35,466] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-29 12:35:35,468] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-29 12:35:35,469] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-29 12:35:35,470] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-29 12:35:35,471] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-29 12:35:35,472] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-29 12:35:35,473] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-29 12:35:35,474] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-29 12:35:35,475] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-29 12:35:35,476] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-29 12:35:35,481] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-29 12:35:35,486] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-29 12:35:35,487] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-29 12:42:41,435] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-29 12:42:41,439] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-29 12:42:41,440] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-29 12:42:41,442] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-29 12:42:41,443] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-29 12:42:41,444] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-29 12:42:41,445] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-29 12:42:41,446] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-29 12:42:41,448] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-29 12:42:41,449] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-29 12:42:41,451] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-29 12:42:41,452] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-29 12:42:41,454] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-29 12:42:41,455] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-29 12:42:41,457] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-29 12:45:54,300] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-29 12:45:54,303] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-29 12:45:54,304] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-29 12:45:54,306] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-29 12:45:54,307] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-29 12:45:54,313] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-29 12:45:54,316] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-29 12:45:54,317] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-29 12:45:54,319] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-29 12:45:54,320] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-29 12:45:54,322] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-29 12:45:54,323] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-29 12:45:54,325] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-29 12:45:54,332] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-29 12:45:54,333] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

