[2025-01-14 12:13:47,263] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-14 12:13:47,265] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-14 12:13:47,267] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-14 12:13:47,268] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-14 12:13:47,269] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-14 12:13:47,270] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-14 12:13:47,272] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-14 12:13:47,273] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-14 12:13:47,274] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-14 12:13:47,275] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-14 12:13:47,277] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-14 12:13:47,278] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-14 12:13:47,279] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-17 06:05:23,755] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-17 06:05:23,762] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-17 06:05:23,763] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-17 06:05:23,764] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-17 06:05:23,765] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-17 06:05:23,767] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-17 06:05:23,769] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-17 06:05:23,770] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-17 06:05:23,771] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-17 06:05:23,773] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-17 06:05:23,774] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-17 06:05:23,775] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-17 06:05:23,777] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-17 06:56:59,228] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-17 06:56:59,236] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-17 06:56:59,243] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-17 06:56:59,244] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-17 06:56:59,246] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-17 06:56:59,248] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-17 06:56:59,251] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-17 06:56:59,253] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-17 06:56:59,254] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-17 06:56:59,262] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-17 06:56:59,265] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-17 06:56:59,267] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-17 06:56:59,268] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-17 07:01:50,682] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-17 07:01:50,686] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-17 07:01:50,688] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-17 07:01:50,693] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-17 07:01:50,694] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-17 07:01:50,697] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-17 07:01:50,698] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-17 07:01:50,699] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-17 07:01:50,700] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-17 07:01:50,701] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-17 07:01:50,703] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-17 07:01:50,725] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-17 07:01:50,728] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-19 22:33:01,134] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-19 22:33:01,139] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-19 22:33:01,140] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-19 22:33:01,142] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-19 22:33:01,143] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-19 22:33:01,144] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-19 22:33:01,146] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-19 22:33:01,148] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-19 22:33:01,149] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-19 22:33:01,150] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-19 22:33:01,152] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-19 22:33:01,154] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-19 22:33:01,157] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 03:40:12,436] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 03:40:12,440] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 03:40:12,442] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 03:40:12,443] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 03:40:12,444] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 03:40:12,445] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 03:40:12,446] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 03:40:12,449] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 03:40:12,452] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 03:40:12,454] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 03:40:12,455] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 03:40:12,456] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 03:40:12,457] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 06:52:20,768] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 06:52:20,773] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 06:52:20,775] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 06:52:20,776] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization_id):
    return 1

[2025-01-20 06:52:20,777] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 06:52:20,778] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 06:52:20,780] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 06:52:20,781] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 06:52:20,782] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 06:52:20,783] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 06:52:20,785] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 06:52:20,786] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 06:52:20,788] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 06:52:20,790] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 06:52:20,792] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 07:02:47,732] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 07:02:47,736] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 07:02:47,740] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 07:02:47,742] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization_id):
    return 1

[2025-01-20 07:02:47,744] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 07:02:47,745] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 07:02:47,747] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 07:02:47,749] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 07:02:47,750] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 07:02:47,752] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 07:02:47,757] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 07:02:47,759] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 07:02:47,761] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 07:02:47,762] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 07:02:47,763] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 07:58:31,725] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 07:58:31,728] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 07:58:31,731] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 07:58:31,732] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 07:58:31,734] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 07:58:31,735] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 07:58:31,736] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 07:58:31,737] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 07:58:31,738] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 07:58:31,739] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 07:58:31,740] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 07:58:31,742] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 07:58:31,743] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 07:58:31,744] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 07:58:31,745] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:00:07,189] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:00:07,196] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:00:07,198] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:00:07,200] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:00:07,204] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:00:07,208] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:00:07,216] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:00:07,224] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:00:07,234] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:00:07,235] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:00:07,236] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:00:07,238] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:00:07,242] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:00:07,244] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:00:07,246] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:03:51,526] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:03:51,530] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:03:51,532] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:03:51,532] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:03:51,533] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:03:51,535] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:03:51,537] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:03:51,539] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:03:51,541] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:03:51,543] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:03:51,550] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:03:51,553] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:03:51,555] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:03:51,557] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:03:51,559] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:09:22,373] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:09:22,374] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:09:22,377] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:09:22,379] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:09:22,381] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:09:22,383] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:09:22,384] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:09:22,385] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:09:22,386] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:09:22,387] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:09:22,388] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:09:22,389] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:09:22,390] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:09:22,392] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:09:22,394] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:10:10,470] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:10:10,472] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:10:10,473] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:10:10,474] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:10:10,476] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:10:10,479] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:10:10,481] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:10:10,483] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:10:10,484] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:10:10,485] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:10:10,486] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:10:10,487] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:10:10,489] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:10:10,493] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:10:10,495] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:11:14,377] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:11:14,379] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:11:14,380] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:11:14,381] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:11:14,383] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:11:14,384] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:11:14,385] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:11:14,387] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:11:14,389] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:11:14,390] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:11:14,392] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:11:14,393] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:11:14,394] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:11:14,395] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:11:14,396] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:12:51,987] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:12:51,988] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:12:51,989] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:12:51,990] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:12:51,991] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:12:51,992] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:12:51,993] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:12:51,994] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:12:51,995] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:12:51,997] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:12:52,000] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:12:52,001] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:12:52,002] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:12:52,003] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:12:52,004] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:13:09,602] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:13:09,603] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:13:09,604] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:13:09,605] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:13:09,606] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:13:09,608] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:13:09,609] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:13:09,610] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:13:09,611] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:13:09,612] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:13:09,613] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:13:09,614] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:13:09,615] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:13:09,616] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:13:09,617] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:23:31,870] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:23:31,872] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:23:31,873] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:23:31,874] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:23:31,875] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:23:31,875] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:23:31,877] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:23:31,878] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:23:31,879] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:23:31,880] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:23:31,881] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:23:31,882] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:23:31,883] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:23:31,884] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:23:31,886] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:23:37,661] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:23:37,663] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 08:23:37,665] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:23:37,668] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:23:37,669] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:23:37,672] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:23:37,674] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:23:37,676] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:23:37,680] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:23:37,686] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:23:37,689] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:23:37,698] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:23:37,700] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:23:37,701] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:23:37,702] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:40:10,682] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 08:40:10,684] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 08:40:10,685] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 08:40:10,686] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 08:40:10,688] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 08:40:10,689] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 08:40:10,690] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 08:40:10,691] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 08:40:10,692] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 08:40:10,694] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 08:40:10,696] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 08:40:10,697] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 08:40:10,699] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 08:40:10,700] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 08:40:10,701] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 10:06:03,638] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 10:06:03,642] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 10:06:03,644] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 10:06:03,648] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 10:06:03,649] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 10:06:03,651] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 10:06:03,653] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 10:06:03,654] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 10:06:03,655] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 10:06:03,657] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 10:06:03,667] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 10:06:03,672] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 10:06:03,674] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 10:06:03,680] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 10:06:03,684] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 10:07:28,244] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 10:07:28,246] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 10:07:28,247] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 10:07:28,249] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 10:07:28,250] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 10:07:28,251] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 10:07:28,253] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 10:07:28,258] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 10:07:28,259] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 10:07:28,260] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 10:07:28,261] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 10:07:28,262] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 10:07:28,263] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 10:07:28,264] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 10:07:28,266] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 10:09:20,749] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 10:09:20,751] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 10:09:20,752] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 10:09:20,753] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-01-20 10:09:20,754] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 10:09:20,756] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 10:09:20,757] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 10:09:20,758] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 10:09:20,759] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 10:09:20,760] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 10:09:20,761] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 10:09:20,762] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 10:09:20,763] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 10:09:20,768] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 10:09:20,769] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 10:11:20,836] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-01-20 10:11:20,838] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-01-20 10:11:20,839] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-01-20 10:11:20,840] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-01-20 10:11:20,842] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-01-20 10:11:20,844] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-01-20 10:11:20,845] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-01-20 10:11:20,846] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-01-20 10:11:20,848] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-01-20 10:11:20,849] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-01-20 10:11:20,850] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-01-20 10:11:20,851] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-01-20 10:11:20,852] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-01-20 10:11:20,853] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-01-20 10:11:20,854] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

