[2025-03-05 21:34:07,886] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 21:34:07,887] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 21:34:07,889] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 21:34:07,890] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 21:34:07,891] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 21:34:07,897] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 21:34:07,899] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 21:34:07,900] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 21:34:07,902] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 21:34:07,903] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 21:34:07,905] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 21:34:07,906] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 21:34:07,907] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 21:34:07,913] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 21:34:07,916] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 21:34:11,875] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 21:34:11,880] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 21:34:11,882] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 21:34:11,885] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 21:34:11,886] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 21:34:11,889] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 21:34:11,890] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 21:34:11,894] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 21:34:11,897] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 21:34:11,900] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 21:34:11,902] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 21:34:11,904] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 21:34:11,906] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 21:34:11,908] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 21:34:11,915] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 21:37:01,960] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 21:37:01,961] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 21:37:01,962] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 21:37:01,963] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 21:37:01,964] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 21:37:01,967] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 21:37:01,969] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 21:37:01,970] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 21:37:01,972] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 21:37:01,973] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 21:37:01,974] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 21:37:01,976] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 21:37:01,977] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 21:37:01,978] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 21:37:01,980] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 21:37:05,191] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 21:37:05,194] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 21:37:05,195] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 21:37:05,197] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 21:37:05,199] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 21:37:05,200] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 21:37:05,206] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 21:37:05,207] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 21:37:05,210] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 21:37:05,211] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 21:37:05,213] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 21:37:05,217] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 21:37:05,222] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 21:37:05,226] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 21:37:05,231] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 21:42:26,444] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 21:42:26,446] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 21:42:26,447] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 21:42:26,450] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 21:42:26,452] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 21:42:26,454] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 21:42:26,455] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 21:42:26,456] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 21:42:26,457] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 21:42:26,459] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 21:42:26,460] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 21:42:26,461] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 21:42:26,463] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 21:42:26,467] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 21:42:26,470] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 21:43:02,443] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 21:43:02,449] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 21:43:02,451] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 21:43:02,453] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 21:43:02,455] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 21:43:02,456] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 21:43:02,458] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 21:43:02,459] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 21:43:02,460] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 21:43:02,461] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 21:43:02,466] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 21:43:02,468] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 21:43:02,469] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 21:43:02,470] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 21:43:02,471] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 21:44:35,769] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 21:44:35,770] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 21:44:35,771] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 21:44:35,772] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 21:44:35,779] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 21:44:35,783] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 21:44:35,784] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 21:44:35,786] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 21:44:35,787] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 21:44:35,789] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 21:44:35,794] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 21:44:35,796] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 21:44:35,801] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 21:44:35,803] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 21:44:35,804] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 21:44:43,983] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 21:44:43,987] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 21:44:43,988] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 21:44:43,994] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 21:44:43,996] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 21:44:43,998] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 21:44:43,999] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 21:44:44,001] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 21:44:44,003] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 21:44:44,005] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 21:44:44,013] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 21:44:44,014] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 21:44:44,015] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 21:44:44,017] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 21:44:44,018] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 21:46:34,619] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 21:46:34,621] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 21:46:34,622] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 21:46:34,624] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 21:46:34,628] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 21:46:34,629] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 21:46:34,630] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 21:46:34,632] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 21:46:34,634] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 21:46:34,637] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 21:46:34,639] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 21:46:34,640] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 21:46:34,643] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 21:46:34,645] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 21:46:34,646] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 21:46:43,676] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 21:46:43,679] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 21:46:43,680] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 21:46:43,681] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 21:46:43,682] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 21:46:43,692] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 21:46:43,695] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 21:46:43,697] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 21:46:43,698] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 21:46:43,700] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 21:46:43,712] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 21:46:43,714] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 21:46:43,715] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 21:46:43,721] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 21:46:43,729] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 22:02:40,023] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 22:02:40,026] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 22:02:40,027] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 22:02:40,029] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 22:02:40,035] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 22:02:40,037] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 22:02:40,038] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 22:02:40,040] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 22:02:40,041] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 22:02:40,042] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 22:02:40,044] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 22:02:40,046] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 22:02:40,053] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 22:02:40,055] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 22:02:40,056] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 22:03:55,920] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 22:03:55,921] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 22:03:55,922] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 22:03:55,923] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 22:03:55,924] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 22:03:55,926] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 22:03:55,928] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 22:03:55,929] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 22:03:55,931] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 22:03:55,932] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 22:03:55,934] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 22:03:55,935] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 22:03:55,936] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 22:03:55,938] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 22:03:55,939] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 22:04:22,545] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 22:04:22,548] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 22:04:22,549] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 22:04:22,550] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 22:04:22,552] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 22:04:22,554] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 22:04:22,555] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 22:04:22,556] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 22:04:22,561] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 22:04:22,563] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 22:04:22,564] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 22:04:22,567] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 22:04:22,568] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 22:04:22,569] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 22:04:22,570] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 22:12:58,580] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 22:12:58,581] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 22:12:58,582] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 22:12:58,583] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 22:12:58,584] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 22:12:58,585] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 22:12:58,586] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 22:12:58,588] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 22:12:58,590] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 22:12:58,592] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 22:12:58,593] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 22:12:58,595] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 22:12:58,597] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 22:12:58,599] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 22:12:58,600] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 22:14:22,546] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 22:14:22,549] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 22:14:22,551] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 22:14:22,553] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 22:14:22,555] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 22:14:22,562] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 22:14:22,564] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 22:14:22,566] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 22:14:22,569] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 22:14:22,570] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 22:14:22,572] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 22:14:22,578] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 22:14:22,580] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 22:14:22,581] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 22:14:22,583] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 22:22:46,642] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 22:22:46,646] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 22:22:46,648] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 22:22:46,650] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 22:22:46,652] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 22:22:46,653] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 22:22:46,655] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 22:22:46,657] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 22:22:46,658] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 22:22:46,660] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 22:22:46,661] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 22:22:46,665] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 22:22:46,667] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 22:22:46,668] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 22:22:46,670] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 22:25:47,287] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 22:25:47,288] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 22:25:47,289] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 22:25:47,290] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 22:25:47,291] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 22:25:47,292] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 22:25:47,294] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 22:25:47,295] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 22:25:47,297] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 22:25:47,298] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 22:25:47,300] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 22:25:47,303] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 22:25:47,305] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 22:25:47,306] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 22:25:47,307] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 22:25:51,113] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 22:25:51,116] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 22:25:51,121] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 22:25:51,125] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 22:25:51,127] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 22:25:51,129] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 22:25:51,130] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 22:25:51,132] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 22:25:51,133] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 22:25:51,139] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 22:25:51,140] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 22:25:51,142] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 22:25:51,143] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 22:25:51,145] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 22:25:51,146] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 22:34:29,507] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 22:34:29,511] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 22:34:29,513] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 22:34:29,514] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 22:34:29,516] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 22:34:29,518] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 22:34:29,520] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 22:34:29,526] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 22:34:29,528] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 22:34:29,529] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 22:34:29,532] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 22:34:29,535] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 22:34:29,543] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 22:34:29,545] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 22:34:29,547] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:01:26,805] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:01:26,806] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:01:26,807] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:01:26,808] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:01:26,809] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:01:26,811] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:01:26,812] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:01:26,813] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:01:26,815] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:01:26,817] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:01:26,818] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:01:26,819] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:01:26,820] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:01:26,821] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:01:26,823] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:01:26,823] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:01:40,292] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:01:40,292] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:01:40,294] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:01:40,295] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:01:40,296] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:01:40,297] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:01:40,299] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:01:40,301] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:01:40,302] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:01:40,305] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:01:40,307] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:01:40,308] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:01:40,310] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:01:40,311] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:01:40,313] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:01:40,315] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:02:36,379] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:02:36,380] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:02:36,382] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:02:36,385] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:02:36,390] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:02:36,391] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:02:36,395] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:02:36,396] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:02:36,398] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:02:36,399] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:02:36,400] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:02:36,401] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:02:36,403] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:02:36,405] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:02:36,407] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:02:36,408] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:02:43,192] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:02:43,194] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:02:43,195] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:02:43,197] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:02:43,198] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:02:43,199] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:02:43,201] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:02:43,202] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:02:43,203] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:02:43,204] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:02:43,206] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:02:43,207] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:02:43,210] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:02:43,214] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:02:43,216] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:02:43,217] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:15:10,326] ERROR [celery.utils.dispatch.signal] Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x00000273F886A790>> raised: NameError("name 'null' is not defined")
Traceback (most recent call last):
  File "I:\etimsx\env\Lib\site-packages\celery\utils\dispatch\signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\celery\fixups\django.py", line 100, in on_import_modules
    self.worker_fixup.validate_models()
  File "I:\etimsx\env\Lib\site-packages\celery\fixups\django.py", line 140, in validate_models
    run_checks()
  File "I:\etimsx\env\Lib\site-packages\django\core\checks\registry.py", line 88, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\core\checks\urls.py", line 14, in check_url_config
    return check_resolver(resolver)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\core\checks\urls.py", line 24, in check_resolver
    return check_method()
           ^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\urls\resolvers.py", line 494, in check
    for pattern in self.url_patterns:
                   ^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\utils\functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
                                         ^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\urls\resolvers.py", line 715, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
                       ^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\utils\functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
                                         ^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\urls\resolvers.py", line 708, in urlconf_module
    return import_module(self.urlconf_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1206, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1178, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1149, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 940, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "I:\etimsx\etimsx\urls.py", line 24, in <module>
    path("accounts/", include("accounts.urls")),  # Add this line
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\urls\conf.py", line 38, in include
    urlconf_module = import_module(urlconf_module)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1206, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1178, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1149, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 940, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "I:\etimsx\accounts\urls.py", line 3, in <module>
    from . import views
  File "I:\etimsx\accounts\views.py", line 23, in <module>
    from organization.views import *
  File "I:\etimsx\organization\views.py", line 41, in <module>
    from commons.branches_constants import BRANCH_LIST
  File "I:\etimsx\commons\branches_constants.py", line 10, in <module>
    "locDesc": null,
               ^^^^
NameError: name 'null' is not defined
[2025-03-05 23:15:14,387] ERROR [celery.utils.dispatch.signal] Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x00000237D93DA650>> raised: NameError("name 'null' is not defined")
Traceback (most recent call last):
  File "I:\etimsx\env\Lib\site-packages\celery\utils\dispatch\signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\celery\fixups\django.py", line 100, in on_import_modules
    self.worker_fixup.validate_models()
  File "I:\etimsx\env\Lib\site-packages\celery\fixups\django.py", line 140, in validate_models
    run_checks()
  File "I:\etimsx\env\Lib\site-packages\django\core\checks\registry.py", line 88, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\core\checks\urls.py", line 14, in check_url_config
    return check_resolver(resolver)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\core\checks\urls.py", line 24, in check_resolver
    return check_method()
           ^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\urls\resolvers.py", line 494, in check
    for pattern in self.url_patterns:
                   ^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\utils\functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
                                         ^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\urls\resolvers.py", line 715, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
                       ^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\utils\functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
                                         ^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\urls\resolvers.py", line 708, in urlconf_module
    return import_module(self.urlconf_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1206, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1178, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1149, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 940, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "I:\etimsx\etimsx\urls.py", line 24, in <module>
    path("accounts/", include("accounts.urls")),  # Add this line
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "I:\etimsx\env\Lib\site-packages\django\urls\conf.py", line 38, in include
    urlconf_module = import_module(urlconf_module)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1206, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1178, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1149, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 940, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "I:\etimsx\accounts\urls.py", line 3, in <module>
    from . import views
  File "I:\etimsx\accounts\views.py", line 23, in <module>
    from organization.views import *
  File "I:\etimsx\organization\views.py", line 41, in <module>
    from commons.branches_constants import BRANCH_LIST
  File "I:\etimsx\commons\branches_constants.py", line 10, in <module>
    "locDesc": null,
               ^^^^
NameError: name 'null' is not defined
[2025-03-05 23:15:44,517] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:15:44,519] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:15:44,521] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:15:44,522] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:15:44,523] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:15:44,525] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:15:44,526] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:15:44,527] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:15:44,529] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:15:44,530] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:15:44,534] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:15:44,536] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:15:44,539] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:15:44,540] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:15:44,542] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:15:44,544] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:15:47,358] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:15:47,360] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:15:47,361] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:15:47,363] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:15:47,365] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:15:47,370] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:15:47,372] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:15:47,374] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:15:47,376] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:15:47,377] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:15:47,380] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:15:47,385] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:15:47,392] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:15:47,393] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:15:47,395] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:15:47,400] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:16:12,983] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:16:12,987] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:16:12,994] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:16:13,000] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:16:13,006] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:16:13,007] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:16:13,009] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:16:13,011] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:16:13,012] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:16:13,019] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:16:13,024] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:16:13,025] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:16:13,026] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:16:13,029] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:16:13,041] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:16:13,043] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:16:47,793] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:16:47,795] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:16:47,797] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:16:47,798] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:16:47,800] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:16:47,801] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:16:47,802] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:16:47,803] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:16:47,805] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:16:47,806] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:16:47,807] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:16:47,808] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:16:47,810] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:16:47,814] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:16:47,816] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:16:47,817] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:24:57,662] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:24:57,665] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:24:57,672] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:24:57,678] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:24:57,682] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:24:57,686] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:24:57,695] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:24:57,697] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:24:57,700] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:24:57,703] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:24:57,708] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:24:57,710] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:24:57,712] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:24:57,715] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:24:57,727] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:24:57,734] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:26:43,554] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:26:43,555] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:26:43,556] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:26:43,558] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:26:43,559] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:26:43,560] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:26:43,562] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:26:43,563] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:26:43,565] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:26:43,566] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:26:43,567] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:26:43,568] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:26:43,569] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:26:43,571] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:26:43,572] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:26:43,573] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:42:05,016] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:42:05,017] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-05 23:42:05,019] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:42:05,021] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:42:05,024] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:42:05,027] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:42:05,030] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:42:05,034] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:42:05,035] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:42:05,036] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:42:05,037] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:42:05,038] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:42:05,039] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:42:05,043] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:42:05,047] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:42:05,051] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:42:05,052] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:42:07,544] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:42:07,546] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:42:07,547] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:42:07,548] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:42:07,549] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:42:07,552] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:42:07,554] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:42:07,555] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:42:07,557] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:42:07,561] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:42:07,563] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:42:07,566] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:42:07,568] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-05 23:42:07,570] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:42:07,571] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:42:07,572] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:42:07,576] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:43:10,815] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:43:10,817] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-05 23:43:10,818] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:43:10,819] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:43:10,824] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:43:10,826] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:43:10,827] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:43:10,829] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:43:10,830] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:43:10,832] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:43:10,833] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:43:10,834] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:43:10,835] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:43:10,836] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:43:10,841] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:43:10,845] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:43:10,846] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:45:56,758] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:45:56,759] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:45:56,760] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:45:56,763] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:45:56,766] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:45:56,768] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:45:56,769] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:45:56,770] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:45:56,772] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:45:56,773] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-05 23:45:56,774] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:45:56,776] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:45:56,777] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:45:56,780] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:45:56,784] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:45:56,786] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:45:56,789] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:46:06,216] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:46:06,217] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:46:06,219] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:46:06,220] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:46:06,221] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:46:06,222] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:46:06,223] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:46:06,225] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:46:06,226] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:46:06,229] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-05 23:46:06,231] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:46:06,233] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:46:06,234] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:46:06,235] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:46:06,237] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:46:06,239] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:46:06,241] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:47:33,348] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:47:33,349] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:47:33,351] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:47:33,352] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:47:33,353] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:47:33,354] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:47:33,355] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:47:33,360] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:47:33,361] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:47:33,362] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:47:33,364] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:47:33,365] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:47:33,366] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-05 23:47:33,368] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-05 23:47:33,369] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:47:33,370] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:47:33,371] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:47:45,812] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-05 23:47:45,813] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-05 23:47:45,814] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-05 23:47:45,815] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-05 23:47:45,816] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-05 23:47:45,817] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-05 23:47:45,818] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-05 23:47:45,820] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-05 23:47:45,821] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-05 23:47:45,822] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-05 23:47:45,824] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-05 23:47:45,827] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-05 23:47:45,828] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-05 23:47:45,830] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-05 23:47:45,831] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-05 23:47:45,832] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-05 23:47:45,834] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 00:53:25,779] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 00:53:25,783] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 00:53:25,787] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 00:53:25,789] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 00:53:25,790] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 00:53:25,792] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 00:53:25,794] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 00:53:25,796] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 00:53:25,797] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 00:53:25,806] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 00:53:25,808] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 00:53:25,810] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 00:53:25,812] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 00:53:25,814] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 00:53:25,820] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 00:53:25,822] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 00:53:25,824] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 02:03:06,423] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 02:03:06,427] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 02:03:06,428] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 02:03:06,430] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 02:03:06,432] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 02:03:06,433] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 02:03:06,435] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 02:03:06,440] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 02:03:06,442] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 02:03:06,443] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 02:03:06,445] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 02:03:06,446] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 02:03:06,448] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 02:03:06,450] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 02:03:06,452] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 02:03:06,457] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 02:03:06,459] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 02:06:48,931] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 02:06:48,934] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 02:06:48,936] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 02:06:48,938] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 02:06:48,939] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 02:06:48,950] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 02:06:48,952] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 02:06:48,955] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 02:06:48,961] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 02:06:48,963] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 02:06:48,965] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 02:06:48,967] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 02:06:48,978] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 02:06:48,979] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 02:06:48,981] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 02:06:48,983] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 02:06:48,984] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 02:07:29,829] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 02:07:29,834] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 02:07:29,836] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 02:07:29,842] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 02:07:29,844] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 02:07:29,852] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 02:07:29,861] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 02:07:29,865] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 02:07:29,869] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 02:07:29,878] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 02:07:29,882] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 02:07:29,883] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 02:07:29,886] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 02:07:29,891] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 02:07:29,893] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 02:07:29,894] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 02:07:29,896] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 02:18:06,939] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 02:18:06,940] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 02:18:06,941] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 02:18:06,943] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 02:18:06,944] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 02:18:06,945] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 02:18:06,946] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 02:18:06,948] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 02:18:06,949] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 02:18:06,950] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 02:18:06,955] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 02:18:06,957] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 02:18:06,959] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 02:18:06,960] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 02:18:06,961] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 02:18:06,963] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 02:18:06,965] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 02:18:22,446] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 02:18:22,447] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 02:18:22,449] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 02:18:22,450] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 02:18:22,455] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 02:18:22,460] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 02:18:22,462] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 02:18:22,464] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 02:18:22,466] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 02:18:22,469] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 02:18:22,473] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 02:18:22,477] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 02:18:22,478] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 02:18:22,480] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 02:18:22,482] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 02:18:22,483] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 02:18:22,485] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 02:33:36,718] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 02:33:36,719] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 02:33:36,720] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 02:33:36,721] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 02:33:36,723] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 02:33:36,724] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 02:33:36,725] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 02:33:36,726] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 02:33:36,727] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 02:33:36,728] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 02:33:36,729] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 02:33:36,731] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 02:33:36,736] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 02:33:36,738] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 02:33:36,740] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 02:33:36,742] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 02:33:36,743] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 02:57:57,981] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 02:57:57,989] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 02:57:57,991] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 02:57:57,993] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 02:57:57,995] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 02:57:57,997] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 02:57:58,002] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 02:57:58,004] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 02:57:58,006] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 02:57:58,007] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 02:57:58,009] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 02:57:58,010] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 02:57:58,012] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 02:57:58,014] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 02:57:58,020] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 02:57:58,022] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 02:57:58,028] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 03:37:19,921] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 03:37:19,925] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 03:37:19,927] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 03:37:19,929] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 03:37:19,932] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 03:37:19,936] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 03:37:19,937] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 03:37:19,940] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 03:37:19,941] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 03:37:19,943] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 03:37:19,944] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 03:37:19,947] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 03:37:19,954] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 03:37:19,959] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 03:37:19,960] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 03:37:19,962] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 03:37:19,964] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:08:46,472] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:08:46,474] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:08:46,477] DEBUG [celery.utils.functional] 
def fetch_and_update_item_code(self):
    return 1

[2025-03-06 04:08:46,478] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:08:46,480] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:08:46,481] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:08:46,483] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:08:46,485] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:08:46,486] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:08:46,489] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:08:46,490] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:08:46,492] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:08:46,496] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:08:46,500] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:08:46,503] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:08:46,505] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:08:46,506] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:08:46,510] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:08:52,772] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:08:52,781] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:08:52,786] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:08:52,787] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:08:52,788] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:08:52,834] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:08:52,857] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:08:52,895] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:08:52,904] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:08:52,906] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:08:52,909] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:08:52,934] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:08:52,937] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:08:52,941] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:08:52,946] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:08:52,951] DEBUG [celery.utils.functional] 
def fetch_and_update_item_code(self):
    return 1

[2025-03-06 04:08:52,952] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:08:52,954] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:09:10,625] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:09:10,627] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:09:10,629] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:09:10,631] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:09:10,633] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:09:10,635] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:09:10,637] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:09:10,639] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:09:10,646] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:09:10,652] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:09:10,654] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:09:10,655] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:09:10,665] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:09:10,667] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:09:10,670] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:09:10,681] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:09:10,686] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:09:10,688] DEBUG [celery.utils.functional] 
def fetch_and_update_item_code(self):
    return 1

[2025-03-06 04:09:28,572] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:09:28,576] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:09:28,579] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:09:28,585] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:09:28,587] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:09:28,591] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:09:28,602] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:09:28,604] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:09:28,608] DEBUG [celery.utils.functional] 
def fetch_and_update_item_code(self):
    return 1

[2025-03-06 04:09:28,612] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:09:28,620] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:09:28,623] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:09:28,627] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:09:28,635] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:09:28,637] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:09:28,641] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:09:28,651] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:09:28,657] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:10:03,105] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:10:03,106] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:10:03,108] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:10:03,109] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:10:03,113] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:10:03,117] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:10:03,118] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:10:03,123] DEBUG [celery.utils.functional] 
def fetch_and_update_item_code(self):
    return 1

[2025-03-06 04:10:03,125] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:10:03,127] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:10:03,128] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:10:03,130] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:10:03,132] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:10:03,134] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:10:03,135] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:10:03,140] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:10:03,142] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:10:03,145] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:10:15,689] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:10:15,690] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:10:15,691] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:10:15,692] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:10:15,693] DEBUG [celery.utils.functional] 
def fetch_and_update_item_code(self):
    return 1

[2025-03-06 04:10:15,694] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:10:15,696] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:10:15,697] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:10:15,698] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:10:15,699] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:10:15,700] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:10:15,701] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:10:15,703] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:10:15,705] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:10:15,707] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:10:15,709] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:10:15,711] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:10:15,713] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:11:45,470] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:11:45,472] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:11:45,473] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:11:45,475] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:11:45,477] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:11:45,479] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:11:45,483] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:11:45,485] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:11:45,486] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-06 04:11:45,488] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:11:45,489] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:11:45,491] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:11:45,492] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:11:45,494] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:11:45,497] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:11:45,502] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:11:45,504] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:11:45,505] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:11:49,559] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:11:49,560] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:11:49,562] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:11:49,564] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:11:49,566] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-06 04:11:49,569] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:11:49,571] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:11:49,572] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:11:49,574] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:11:49,576] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:11:49,577] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:11:49,578] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:11:49,579] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:11:49,581] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:11:49,583] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:11:49,585] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:11:49,590] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:11:49,591] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:12:07,228] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:12:07,230] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:12:07,231] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-06 04:12:07,232] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:12:07,233] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:12:07,238] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:12:07,241] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:12:07,243] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:12:07,244] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:12:07,245] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:12:07,248] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:12:07,250] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:12:07,251] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:12:07,258] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:12:07,260] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:12:07,262] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:12:07,269] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:12:07,271] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:12:09,567] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:12:09,569] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:12:09,570] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:12:09,572] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:12:09,575] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:12:09,578] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:12:09,583] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:12:09,585] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:12:09,586] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:12:09,588] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:12:09,590] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:12:09,591] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:12:09,593] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-06 04:12:09,595] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:12:09,600] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:12:09,603] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:12:09,604] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:12:09,605] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:21:32,994] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:21:32,998] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:21:33,000] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-06 04:21:33,001] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:21:33,003] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:21:33,004] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:21:33,006] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:21:33,007] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:21:33,009] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:21:33,010] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:21:33,011] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:21:33,013] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:21:33,014] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:21:33,017] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:21:33,019] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:21:33,020] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:21:33,022] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:21:33,024] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-06 04:32:08,264] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-06 04:32:08,269] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-06 04:32:08,270] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-06 04:32:08,272] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-06 04:32:08,274] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-06 04:32:08,276] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-06 04:32:08,281] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-06 04:32:08,282] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-06 04:32:08,284] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-06 04:32:08,286] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-06 04:32:08,288] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-06 04:32:08,289] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-06 04:32:08,291] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-06 04:32:08,293] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-06 04:32:08,302] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-06 04:32:08,303] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-06 04:32:08,306] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-06 04:32:08,307] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-10 06:13:08,793] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-10 06:13:08,794] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-10 06:13:08,795] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-10 06:13:08,796] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-10 06:13:08,798] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-10 06:13:08,799] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-10 06:13:08,802] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-10 06:13:08,805] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-10 06:13:08,808] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-10 06:13:08,810] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-10 06:13:08,812] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-10 06:13:08,813] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-10 06:13:08,816] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-10 06:13:08,820] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-10 06:13:08,821] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-10 06:13:08,823] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-10 06:13:08,826] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-10 06:13:08,827] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-10 06:13:15,480] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-10 06:13:15,481] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-10 06:13:15,483] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-10 06:13:15,486] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-10 06:13:15,492] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-10 06:13:15,498] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-10 06:13:15,501] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-10 06:13:15,513] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-10 06:13:15,516] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-10 06:13:15,525] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-10 06:13:15,528] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-10 06:13:15,533] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-10 06:13:15,535] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-10 06:13:15,540] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-10 06:13:15,543] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-10 06:13:15,546] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-10 06:13:15,549] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-10 06:13:15,553] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-10 06:16:02,477] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-10 06:16:02,478] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-10 06:16:02,481] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-10 06:16:02,483] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-10 06:16:02,490] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-10 06:16:02,502] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-10 06:16:02,504] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-10 06:16:02,507] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-10 06:16:02,554] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-10 06:16:02,567] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-10 06:16:02,572] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-10 06:16:02,578] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-10 06:16:02,583] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-10 06:16:02,585] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-10 06:16:02,588] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-10 06:16:02,589] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-10 06:16:02,591] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-10 06:16:02,596] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-10 06:16:17,621] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-10 06:16:17,622] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-10 06:16:17,623] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-10 06:16:17,625] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-10 06:16:17,626] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-10 06:16:17,628] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-10 06:16:17,633] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-10 06:16:17,639] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-10 06:16:17,650] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-10 06:16:17,651] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-10 06:16:17,653] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-10 06:16:17,654] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-10 06:16:17,656] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-10 06:16:17,662] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-10 06:16:17,666] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-10 06:16:17,667] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-10 06:16:17,669] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-10 06:16:17,671] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-10 06:16:53,929] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-10 06:16:53,935] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-10 06:16:53,938] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-10 06:16:53,942] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-10 06:16:53,946] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-10 06:16:53,951] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-10 06:16:53,952] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-10 06:16:53,954] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-10 06:16:53,963] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-10 06:16:53,968] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-10 06:16:53,970] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-10 06:16:53,982] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-10 06:16:53,985] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-10 06:16:53,988] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-10 06:16:53,993] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-10 06:16:53,996] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-10 06:16:54,000] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-10 06:16:54,003] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-17 07:58:05,876] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-17 07:58:05,877] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-17 07:58:05,877] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-17 07:58:05,878] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-17 07:58:05,879] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-17 07:58:05,880] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-17 07:58:05,882] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-17 07:58:05,883] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-17 07:58:05,885] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-17 07:58:05,886] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-17 07:58:05,887] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-17 07:58:05,888] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-17 07:58:05,890] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-17 07:58:05,892] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-17 07:58:05,899] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-17 07:58:05,901] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-17 07:58:05,902] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-17 07:58:05,905] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-17 07:58:15,004] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-17 07:58:15,025] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-17 07:58:15,025] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-17 07:58:15,027] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-17 07:58:15,029] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-17 07:58:15,031] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-17 07:58:15,033] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-17 07:58:15,034] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-17 07:58:15,035] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-17 07:58:15,058] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-17 07:58:15,059] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-17 07:58:15,064] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-17 07:58:15,066] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-17 07:58:15,068] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-17 07:58:15,070] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-17 07:58:15,082] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-17 07:58:15,083] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-17 07:58:15,085] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-17 07:59:43,776] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-17 07:59:43,779] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-17 07:59:43,780] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-17 07:59:43,780] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-17 07:59:43,781] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-17 07:59:43,782] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-17 07:59:43,783] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-17 07:59:43,786] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-17 07:59:43,788] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-17 07:59:43,790] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-17 07:59:43,792] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-17 07:59:43,794] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-17 07:59:43,795] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-17 07:59:43,797] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-17 07:59:43,798] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-17 07:59:43,799] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-17 07:59:43,841] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-17 07:59:43,843] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:11:55,613] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:11:55,619] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:11:55,620] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:11:55,621] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:11:55,656] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:11:55,669] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:11:55,693] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:11:55,718] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:11:55,728] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:11:55,741] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:11:55,745] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:11:55,772] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:11:55,789] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:11:55,794] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:11:55,800] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:11:55,837] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:11:55,851] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:11:55,879] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:12:02,411] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:12:02,424] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:12:02,430] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:12:02,441] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:12:02,450] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:12:02,458] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:12:02,469] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:12:02,478] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:12:02,492] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:12:02,509] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:12:02,512] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:12:02,523] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:12:02,529] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:12:02,539] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:12:02,547] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:12:02,557] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:12:02,572] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:12:02,585] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:17:02,524] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:17:02,525] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:17:02,526] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:17:02,527] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:17:02,528] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:17:02,529] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:17:02,531] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:17:02,532] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:17:02,533] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:17:02,534] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:17:02,534] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:17:02,535] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:17:02,536] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:17:02,537] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:17:02,539] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:17:02,540] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:17:02,541] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:17:02,541] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:21:31,812] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:21:31,823] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:21:31,824] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:21:31,825] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:21:31,825] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:21:31,826] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:21:31,827] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:21:31,827] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:21:31,829] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:21:31,831] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:21:31,832] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:21:31,834] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:21:31,835] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:21:31,837] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:21:31,838] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:21:31,840] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:21:31,842] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:21:31,843] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:24:15,256] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:24:15,258] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:24:15,259] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:24:15,260] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:24:15,261] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:24:15,263] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:24:15,264] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:24:15,265] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:24:15,266] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:24:15,267] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:24:15,269] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:24:15,270] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:24:15,273] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:24:15,274] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:24:15,276] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:24:15,277] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:24:15,279] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:24:15,280] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:25:44,256] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:25:44,257] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:25:44,263] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:25:44,264] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:25:44,265] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:25:44,266] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:25:44,267] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:25:44,269] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:25:44,271] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:25:44,272] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:25:44,273] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:25:44,274] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:25:44,276] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:25:44,278] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:25:44,279] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:25:44,280] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:25:44,281] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:25:44,282] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:25:48,933] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:25:48,937] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:25:48,937] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:25:48,939] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:25:48,940] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:25:48,942] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:25:48,943] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:25:48,944] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:25:48,945] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:25:48,947] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:25:48,948] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:25:48,950] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:25:48,952] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:25:48,953] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:25:48,955] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:25:48,956] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:25:48,957] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:25:48,959] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:27:20,123] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:27:20,124] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:27:20,125] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:27:20,127] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:27:20,128] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:27:20,129] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:27:20,130] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:27:20,132] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:27:20,134] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:27:20,135] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:27:20,136] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:27:20,137] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:27:20,154] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:27:20,156] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:27:20,157] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:27:20,158] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:27:20,159] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:27:20,162] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:27:45,350] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:27:45,353] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:27:45,354] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:27:45,355] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:27:45,356] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:27:45,357] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:27:45,359] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:27:45,366] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:27:45,367] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:27:45,369] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:27:45,371] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:27:45,374] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:27:45,375] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:27:45,385] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:27:45,386] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:27:45,387] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:27:45,389] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:27:45,392] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:30:14,964] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:30:14,969] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:30:14,971] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:30:14,996] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:30:15,024] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:30:15,031] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:30:15,054] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:30:15,063] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:30:15,066] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:30:15,075] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:30:15,078] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:30:15,081] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:30:15,091] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:30:15,093] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:30:15,096] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:30:15,100] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:30:15,105] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:30:15,107] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:30:18,604] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:30:18,605] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:30:18,606] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:30:18,607] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:30:18,608] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:30:18,609] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:30:18,610] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:30:18,611] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:30:18,612] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:30:18,612] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:30:18,613] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:30:18,614] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:30:18,615] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:30:18,616] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:30:18,621] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:30:18,627] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:30:18,629] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:30:18,632] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:30:36,426] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:30:36,432] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:30:36,434] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:30:36,436] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:30:36,438] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:30:36,440] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:30:36,441] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:30:36,442] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:30:36,443] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:30:36,445] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:30:36,447] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:30:36,449] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:30:36,452] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:30:36,455] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:30:36,456] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:30:36,457] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:30:36,459] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:30:36,460] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:36:32,751] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:36:32,754] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:36:32,755] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:36:32,757] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:36:32,758] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:36:32,759] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:36:32,761] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:36:32,763] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:36:32,764] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:36:32,765] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:36:32,768] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:36:32,770] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:36:32,771] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:36:32,773] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:36:32,774] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:36:32,775] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:36:32,776] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:36:32,777] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:57:39,329] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:57:39,330] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:57:39,331] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:57:39,332] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:57:39,333] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:57:39,334] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:57:39,336] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:57:39,346] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:57:39,349] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:57:39,350] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:57:39,351] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:57:39,352] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:57:39,353] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:57:39,354] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:57:39,358] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:57:39,360] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:57:39,361] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:57:39,362] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:57:47,878] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:57:47,880] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:57:47,880] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:57:47,881] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:57:47,882] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:57:47,883] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:57:47,884] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:57:47,886] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:57:47,887] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 02:57:47,890] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:57:47,891] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:57:47,892] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:57:47,893] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:57:47,894] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:57:47,898] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:57:47,900] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:57:47,900] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:57:47,901] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:58:01,669] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 02:58:01,673] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 02:58:01,675] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 02:58:01,677] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 02:58:01,679] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 02:58:01,680] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 02:58:01,682] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 02:58:01,683] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 02:58:01,684] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 02:58:01,686] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 02:58:01,687] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 02:58:01,690] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 02:58:01,691] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 02:58:01,693] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 02:58:01,694] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 02:58:01,695] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 02:58:01,696] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 02:58:01,697] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 03:12:36,712] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 03:12:36,713] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 03:12:36,714] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 03:12:36,715] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 03:12:36,716] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 03:12:36,717] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 03:12:36,718] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 03:12:36,720] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 03:12:36,722] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 03:12:36,723] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 03:12:36,725] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 03:12:36,727] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 03:12:36,728] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 03:12:36,730] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 03:12:36,730] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 03:12:36,732] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 03:12:36,733] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 03:12:36,734] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 03:12:43,167] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 03:12:43,168] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 03:12:43,169] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 03:12:43,171] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 03:12:43,171] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 03:12:43,173] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 03:12:43,174] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 03:12:43,176] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 03:12:43,178] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 03:12:43,180] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 03:12:43,181] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 03:12:43,182] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 03:12:43,183] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 03:12:43,184] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 03:12:43,185] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 03:12:43,186] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 03:12:43,189] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 03:12:43,190] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 03:12:56,100] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 03:12:56,104] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 03:12:56,105] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 03:12:56,106] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 03:12:56,108] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 03:12:56,109] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 03:12:56,111] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 03:12:56,112] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 03:12:56,113] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 03:12:56,114] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 03:12:56,115] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 03:12:56,116] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 03:12:56,118] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 03:12:56,121] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 03:12:56,123] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 03:12:56,124] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 03:12:56,125] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 03:12:56,126] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 03:21:52,600] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 03:21:52,602] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 03:21:52,603] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 03:21:52,604] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 03:21:52,606] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 03:21:52,607] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 03:21:52,609] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 03:21:52,609] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 03:21:52,610] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 03:21:52,612] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 03:21:52,613] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 03:21:52,614] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 03:21:52,615] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 03:21:52,617] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 03:21:52,618] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 03:21:52,619] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 03:21:52,621] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 03:21:52,624] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 03:21:55,136] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 03:21:55,139] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 03:21:55,140] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 03:21:55,141] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 03:21:55,142] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 03:21:55,144] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 03:21:55,145] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 03:21:55,146] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 03:21:55,148] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 03:21:55,149] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 03:21:55,151] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 03:21:55,152] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 03:21:55,154] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 03:21:55,156] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 03:21:55,157] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 03:21:55,159] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 03:21:55,162] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 03:21:55,164] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 03:22:36,418] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 03:22:36,422] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 03:22:36,423] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 03:22:36,425] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 03:22:36,426] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 03:22:36,428] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 03:22:36,429] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 03:22:36,431] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 03:22:36,432] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 03:22:36,433] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 03:22:36,438] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 03:22:36,439] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 03:22:36,441] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 03:22:36,442] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 03:22:36,444] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 03:22:36,445] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 03:22:36,447] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 03:22:36,448] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 04:41:01,757] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 04:41:01,764] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 04:41:01,766] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 04:41:01,767] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 04:41:01,768] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 04:41:01,770] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 04:41:01,771] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 04:41:01,772] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 04:41:01,773] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 04:41:01,774] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 04:41:01,781] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 04:41:01,783] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 04:41:01,784] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 04:41:01,788] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 04:41:01,790] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 04:41:01,796] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 04:41:01,800] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 04:41:01,802] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 05:08:16,254] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 05:08:16,258] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 05:08:16,260] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 05:08:16,263] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 05:08:16,265] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 05:08:16,266] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 05:08:16,268] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 05:08:16,269] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 05:08:16,270] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 05:08:16,271] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 05:08:16,272] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 05:08:16,273] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 05:08:16,274] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 05:08:16,275] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 05:08:16,276] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 05:08:16,279] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 05:08:16,280] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 05:08:16,281] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 05:08:23,490] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 05:08:23,491] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 05:08:23,492] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 05:08:23,493] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 05:08:23,494] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 05:08:23,495] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 05:08:23,496] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 05:08:23,498] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 05:08:23,499] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 05:08:23,501] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 05:08:23,502] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 05:08:23,504] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 05:08:23,505] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 05:08:23,506] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 05:08:23,507] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 05:08:23,509] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 05:08:23,510] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 05:08:23,512] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 05:08:46,521] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 05:08:46,525] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 05:08:46,528] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 05:08:46,529] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 05:08:46,531] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 05:08:46,532] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 05:08:46,533] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 05:08:46,535] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 05:08:46,536] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 05:08:46,537] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 05:08:46,539] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 05:08:46,541] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 05:08:46,542] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 05:08:46,544] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 05:08:46,546] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 05:08:46,548] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 05:08:46,549] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 05:08:46,550] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 05:15:37,261] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 05:15:37,265] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 05:15:37,269] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 05:15:37,271] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 05:15:37,272] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 05:15:37,274] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 05:15:37,275] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 05:15:37,277] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 05:15:37,278] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 05:15:37,288] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 05:15:37,289] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 05:15:37,291] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 05:15:37,292] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 05:15:37,294] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 05:15:37,302] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 05:15:37,304] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 05:15:37,306] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 05:15:37,307] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 05:18:25,544] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 05:18:25,547] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 05:18:25,549] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 05:18:25,550] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 05:18:25,553] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 05:18:25,559] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 05:18:25,561] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 05:18:25,562] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 05:18:25,563] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 05:18:25,565] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 05:18:25,566] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 05:18:25,567] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 05:18:25,578] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 05:18:25,580] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 05:18:25,581] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 05:18:25,582] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 05:18:25,584] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 05:18:25,590] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 05:19:05,286] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 05:19:05,287] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 05:19:05,288] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 05:19:05,289] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 05:19:05,291] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 05:19:05,292] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 05:19:05,293] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 05:19:05,294] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 05:19:05,296] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 05:19:05,297] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 05:19:05,298] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 05:19:05,299] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 05:19:05,300] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 05:19:05,301] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 05:19:05,302] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 05:19:05,304] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 05:19:05,305] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 05:19:05,306] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 05:19:17,454] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 05:19:17,455] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 05:19:17,456] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 05:19:17,457] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 05:19:17,458] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 05:19:17,460] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 05:19:17,461] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 05:19:17,462] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 05:19:17,463] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 05:19:17,464] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 05:19:17,465] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 05:19:17,466] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 05:19:17,469] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 05:19:17,470] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 05:19:17,471] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 05:19:17,472] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 05:19:17,474] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 05:19:17,476] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 07:31:16,018] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 07:31:16,021] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 07:31:16,022] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 07:31:16,023] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 07:31:16,024] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 07:31:16,026] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 07:31:16,027] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 07:31:16,029] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 07:31:16,032] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 07:31:16,033] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 07:31:16,034] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 07:31:16,035] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 07:31:16,036] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 07:31:16,037] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 07:31:16,038] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 07:31:16,039] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 07:31:16,040] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 07:31:16,041] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-18 07:33:19,181] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-18 07:33:19,184] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-18 07:33:19,185] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-18 07:33:19,186] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-18 07:33:19,188] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-18 07:33:19,189] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-18 07:33:19,191] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-18 07:33:19,192] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-18 07:33:19,193] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-18 07:33:19,194] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-18 07:33:19,195] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-18 07:33:19,197] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-18 07:33:19,198] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-18 07:33:19,199] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-18 07:33:19,200] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-18 07:33:19,201] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-18 07:33:19,202] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-18 07:33:19,202] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-19 04:42:21,439] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-19 04:42:21,441] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-19 04:42:21,441] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-19 04:42:21,442] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-19 04:42:21,443] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-19 04:42:21,443] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-19 04:42:21,444] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-19 04:42:21,444] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-19 04:42:21,445] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-19 04:42:21,445] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-19 04:42:21,446] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-19 04:42:21,447] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-19 04:42:21,447] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-19 04:42:21,448] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-19 04:42:21,450] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-19 04:42:21,451] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-19 04:42:21,453] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-19 04:42:21,457] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-19 04:42:33,834] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-19 04:42:33,835] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-19 04:42:33,835] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-19 04:42:33,837] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-19 04:42:33,839] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-19 04:42:33,843] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-19 04:42:33,844] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-19 04:42:33,846] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-19 04:42:33,847] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-19 04:42:33,850] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-19 04:42:33,851] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-19 04:42:33,853] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-19 04:42:33,855] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-19 04:42:33,856] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-19 04:42:33,858] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-19 04:42:33,859] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-19 04:42:33,860] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-19 04:42:33,863] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-19 07:10:37,668] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-19 07:10:37,672] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-19 07:10:37,674] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-19 07:10:37,675] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-19 07:10:37,677] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-19 07:10:37,678] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-19 07:10:37,679] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-19 07:10:37,680] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-19 07:10:37,682] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-19 07:10:37,683] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-19 07:10:37,684] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-19 07:10:37,686] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-19 07:10:37,687] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-19 07:10:37,689] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-19 07:10:37,693] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-19 07:10:37,695] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-19 07:10:37,697] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-19 07:10:37,698] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-19 07:19:41,541] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-19 07:19:41,543] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-19 07:19:41,544] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-19 07:19:41,545] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-19 07:19:41,546] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-19 07:19:41,547] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-19 07:19:41,549] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-19 07:19:41,551] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-19 07:19:41,552] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-19 07:19:41,553] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-19 07:19:41,554] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-19 07:19:41,555] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-19 07:19:41,555] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-19 07:19:41,556] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-19 07:19:41,558] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-19 07:19:41,565] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-19 07:19:41,566] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-19 07:19:41,567] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-19 07:19:50,006] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-19 07:19:50,007] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-19 07:19:50,011] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-19 07:19:50,012] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-19 07:19:50,013] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-19 07:19:50,014] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-19 07:19:50,015] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-19 07:19:50,016] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-19 07:19:50,016] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-19 07:19:50,017] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-19 07:19:50,017] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-19 07:19:50,018] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-19 07:19:50,018] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-19 07:19:50,019] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-19 07:19:50,022] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-19 07:19:50,023] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-19 07:19:50,028] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-19 07:19:50,029] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-19 07:21:15,746] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-19 07:21:15,749] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-19 07:21:15,750] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-19 07:21:15,756] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-19 07:21:15,757] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-19 07:21:15,758] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-19 07:21:15,760] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-19 07:21:15,762] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-19 07:21:15,762] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-19 07:21:15,764] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-19 07:21:15,765] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-19 07:21:15,766] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-19 07:21:15,767] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-19 07:21:15,772] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-19 07:21:15,774] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-19 07:21:15,775] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-19 07:21:15,776] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-19 07:21:15,778] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-19 07:38:28,765] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-19 07:38:28,767] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-19 07:38:28,768] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-19 07:38:28,769] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-19 07:38:28,770] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-19 07:38:28,771] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-19 07:38:28,773] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-19 07:38:28,776] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-19 07:38:28,777] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-19 07:38:28,779] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-19 07:38:28,780] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-19 07:38:28,783] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-19 07:38:28,784] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-19 07:38:28,785] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-19 07:38:28,786] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-19 07:38:28,787] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-19 07:38:28,790] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-19 07:38:28,798] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-19 07:38:39,048] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-19 07:38:39,049] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-19 07:38:39,050] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-19 07:38:39,051] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-19 07:38:39,052] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-19 07:38:39,053] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-19 07:38:39,054] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-19 07:38:39,056] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-19 07:38:39,058] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-19 07:38:39,062] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-19 07:38:39,063] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-19 07:38:39,064] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-19 07:38:39,066] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-19 07:38:39,067] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-19 07:38:39,068] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-19 07:38:39,069] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-19 07:38:39,071] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-19 07:38:39,072] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-19 07:41:57,521] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-19 07:41:57,524] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-19 07:41:57,526] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-19 07:41:57,527] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-19 07:41:57,529] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-19 07:41:57,535] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-19 07:41:57,538] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-19 07:41:57,539] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-19 07:41:57,540] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-19 07:41:57,542] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-19 07:41:57,543] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-19 07:41:57,544] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-19 07:41:57,546] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-19 07:41:57,556] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-19 07:41:57,557] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-19 07:41:57,559] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-19 07:41:57,561] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-19 07:41:57,562] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

[2025-03-19 07:42:10,116] DEBUG [celery.utils.functional] 
def xstarmap(task, it):
    return 1

[2025-03-19 07:42:10,118] DEBUG [celery.utils.functional] 
def chunks(task, it, n):
    return 1

[2025-03-19 07:42:10,120] DEBUG [celery.utils.functional] 
def fetch_and_update_tax_code(self):
    return 1

[2025-03-19 07:42:10,121] DEBUG [celery.utils.functional] 
def fetch_and_update_branches(self):
    return 1

[2025-03-19 07:42:10,122] DEBUG [celery.utils.functional] 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

[2025-03-19 07:42:10,124] DEBUG [celery.utils.functional] 
def fetch_and_update_item_classification(self):
    return 1

[2025-03-19 07:42:10,125] DEBUG [celery.utils.functional] 
def backend_cleanup():
    return 1

[2025-03-19 07:42:10,126] DEBUG [celery.utils.functional] 
def retry_failed_requests():
    return 1

[2025-03-19 07:42:10,127] DEBUG [celery.utils.functional] 
def chain(*args, **kwargs):
    return 1

[2025-03-19 07:42:10,130] DEBUG [celery.utils.functional] 
def accumulate(self, *args, **kwargs):
    return 1

[2025-03-19 07:42:10,132] DEBUG [celery.utils.functional] 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

[2025-03-19 07:42:10,133] DEBUG [celery.utils.functional] 
def fetch_and_update_purchases(self, organization):
    return 1

[2025-03-19 07:42:10,135] DEBUG [celery.utils.functional] 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

[2025-03-19 07:42:10,136] DEBUG [celery.utils.functional] 
def fetch_and_update_notices(self):
    return 1

[2025-03-19 07:42:10,138] DEBUG [celery.utils.functional] 
def send_api_request(self, request_id):
    return 1

[2025-03-19 07:42:10,140] DEBUG [celery.utils.functional] 
def xmap(task, it):
    return 1

[2025-03-19 07:42:10,141] DEBUG [celery.utils.functional] 
def async_initialize_vscu_device(self):
    return 1

[2025-03-19 07:42:10,142] DEBUG [celery.utils.functional] 
def debug_task(self):
    return 1

